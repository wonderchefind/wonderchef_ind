function onYouTubeIframeAPIReady() {
    theme.Video.loadVideos()
}
window.theme = window.theme || {}, window.theme = window.theme || {}, theme.Sections = function() {
        this.constructors = {}, this.instances = [], $(document).on("shopify:section:load", this._onSectionLoad.bind(this)).on("shopify:section:unload", this._onSectionUnload.bind(this)).on("shopify:section:select", this._onSelect.bind(this)).on("shopify:section:deselect", this._onDeselect.bind(this)).on("shopify:block:select", this._onBlockSelect.bind(this)).on("shopify:block:deselect", this._onBlockDeselect.bind(this))
    }, theme.Sections.prototype = _.assignIn({}, theme.Sections.prototype, {
        _createInstance: function(t, e) {
            var a = $(t),
                i = a.attr("data-section-id"),
                r = a.attr("data-section-type");
            if (e = e || this.constructors[r], !_.isUndefined(e)) {
                var o = _.assignIn(new e(t), {
                    id: i,
                    type: r,
                    container: t
                });
                this.instances.push(o)
            }
        },
        _onSectionLoad: function(t) {
            var e = $("[data-section-id]", t.target)[0];
            e && this._createInstance(e)
        },
        _onSectionUnload: function(t) {
            this.instances = _.filter(this.instances, function(e) {
                var a = e.id === t.detail.sectionId;
                return a && _.isFunction(e.onUnload) && e.onUnload(t), !a
            })
        },
        _onSelect: function(t) {
            var e = _.find(this.instances, function(e) {
                return e.id === t.detail.sectionId
            });
            !_.isUndefined(e) && _.isFunction(e.onSelect) && e.onSelect(t)
        },
        _onDeselect: function(t) {
            var e = _.find(this.instances, function(e) {
                return e.id === t.detail.sectionId
            });
            !_.isUndefined(e) && _.isFunction(e.onDeselect) && e.onDeselect(t)
        },
        _onBlockSelect: function(t) {
            var e = _.find(this.instances, function(e) {
                return e.id === t.detail.sectionId
            });
            !_.isUndefined(e) && _.isFunction(e.onBlockSelect) && e.onBlockSelect(t)
        },
        _onBlockDeselect: function(t) {
            var e = _.find(this.instances, function(e) {
                return e.id === t.detail.sectionId
            });
            !_.isUndefined(e) && _.isFunction(e.onBlockDeselect) && e.onBlockDeselect(t)
        },
        register: function(t, e) {
            this.constructors[t] = e, $("[data-section-type=" + t + "]").each(function(t, a) {
                this._createInstance(a, e)
            }.bind(this))
        }
    }), window.slate = window.slate || {}, slate.utils = {
        getParameterByName: function(t, e) {
            e || (e = window.location.href), t = t.replace(/[[\]]/g, "\\$&");
            var a = new RegExp("[?&]" + t + "(=([^&#]*)|&|#|$)").exec(e);
            return a ? a[2] ? decodeURIComponent(a[2].replace(/\+/g, " ")) : "" : null
        },
        keyboardKeys: {
            TAB: 9,
            ENTER: 13,
            ESCAPE: 27,
            LEFTARROW: 37,
            RIGHTARROW: 39
        }
    }, window.slate = window.slate || {}, slate.rte = {
        wrapTable: function(t) {
            t.$tables.wrap('<div class="' + t.tableWrapperClass + '"></div>')
        },
        wrapIframe: function(t) {
            t.$iframes.each(function() {
                $(this).wrap('<div class="' + t.iframeWrapperClass + '"></div>'), this.src = this.src
            })
        }
    }, window.slate = window.slate || {}, slate.a11y = {
        pageLinkFocus: function(t) {
            var e = "js-focus-hidden";
            t.first().attr("tabIndex", "-1").focus().addClass(e).one("blur", function() {
                t.first().removeClass(e).removeAttr("tabindex")
            })
        },
        focusHash: function() {
            var t = window.location.hash;
            t && document.getElementById(t.slice(1)) && this.pageLinkFocus($(t))
        },
        bindInPageLinks: function() {
            $("a[href*=#]").on("click", function(t) {
                this.pageLinkFocus($(t.currentTarget.hash))
            }.bind(this))
        },
        trapFocus: function(t) {
            var e = {
                    focusin: t.namespace ? "focusin." + t.namespace : "focusin",
                    focusout: t.namespace ? "focusout." + t.namespace : "focusout",
                    keydown: t.namespace ? "keydown." + t.namespace : "keydown.handleFocus"
                },
                a = t.$container.find($('button, [href], input, select, textarea, [tabindex]:not([tabindex^="-"])').filter(":visible")),
                i = a[0],
                r = a[a.length - 1];
            t.$elementToFocus || (t.$elementToFocus = t.$container), t.$container.attr("tabindex", "-1"), t.$elementToFocus.focus(), $(document).off("focusin"), $(document).on(e.focusout, function() {
                $(document).off(e.keydown)
            }), $(document).on(e.focusin, function(t) {
                t.target !== r && t.target !== i || $(document).on(e.keydown, function(t) {
                    ! function(t) {
                        t.keyCode === slate.utils.keyboardKeys.TAB && (t.target !== r || t.shiftKey || (t.preventDefault(), i.focus()), t.target === i && t.shiftKey && (t.preventDefault(), r.focus()))
                    }(t)
                })
            })
        },
        removeTrapFocus: function(t) {
            var e = t.namespace ? "focusin." + t.namespace : "focusin";
            t.$container && t.$container.length && t.$container.removeAttr("tabindex"), $(document).off(e)
        },
        accessibleLinks: function(t) {
            var e = document.querySelector("body"),
                a = {
                    newWindow: "a11y-new-window-message",
                    external: "a11y-external-message",
                    newWindowExternal: "a11y-new-window-external-message"
                };
            void 0 !== t.$links && t.$links.jquery || (t.$links = $("a[href]:not([aria-describedby])")), $.each(t.$links, function() {
                    var t = $(this),
                        e = t.attr("target"),
                        i = t.attr("rel"),
                        r = function(t) {
                            var e = window.location.hostname;
                            return t[0].hostname !== e
                        }(t),
                        o = "_blank" === e;
                    r && t.attr("aria-describedby", a.external), o && (void 0 !== i && -1 !== i.indexOf("noopener") || t.attr("rel", function(t, e) {
                        return (void 0 === e ? "" : e + " ") + "noopener"
                    }), t.attr("aria-describedby", a.newWindow)), r && o && t.attr("aria-describedby", a.newWindowExternal)
                }),
                function(t) {
                    "object" != typeof t && (t = {});
                    var i = $.extend({
                            newWindow: "Opens in a new window.",
                            external: "Opens external website.",
                            newWindowExternal: "Opens external website in a new window."
                        }, t),
                        r = document.createElement("ul"),
                        o = "";
                    for (var n in i) o += "<li id=" + a[n] + ">" + i[n] + "</li>";
                    r.setAttribute("hidden", !0), r.innerHTML = o, e.appendChild(r)
                }(t.messages)
        }
    }, theme.Images = function() {
        return {
            preload: function(t, e) {
                "string" == typeof t && (t = [t]);
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    this.loadImage(this.getSizedImageUrl(i, e))
                }
            },
            loadImage: function(t) {
                (new Image).src = t
            },
            switchImage: function(t, e, a) {
                var i = this.imageSize(e.src),
                    r = this.getSizedImageUrl(t.src, i);
                a ? a(r, t, e) : e.src = r
            },
            imageSize: function(t) {
                var e = t.match(/.+_((?:pico|icon|thumb|small|compact|medium|large|grande)|\d{1,4}x\d{0,4}|x\d{1,4})[_\\.@]/);
                return null !== e ? void 0 !== e[2] ? e[1] + e[2] : e[1] : null
            },
            getSizedImageUrl: function(t, e) {
                if (null === e) return t;
                if ("master" === e) return this.removeProtocol(t);
                var a = t.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
                if (null !== a) {
                    var i = t.split(a[0]),
                        r = a[0];
                    return this.removeProtocol(i[0] + "_" + e + r)
                }
                return null
            },
            removeProtocol: function(t) {
                return t.replace(/http(s)?:/, "")
            }
        }
    }(), theme.Currency = function() {
        var t = "${{amount}}";
        return {
            formatMoney: function(e, a) {
                "string" == typeof e && (e = e.replace(".", ""));
                var i = "",
                    r = /\{\{\s*(\w+)\s*\}\}/,
                    o = a || t;

                function n(t, e, a, i) {
                    if (a = a || ",", i = i || ".", isNaN(t) || null === t) return 0;
                    var r = (t = (t / 100).toFixed(e)).split(".");
                    return r[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + a) + (r[1] ? i + r[1] : "")
                }
                switch (o.match(r)[1]) {
                    case "amount":
                        i = n(e, 2);
                        break;
                    case "amount_no_decimals":
                        i = n(e, 0);
                        break;
                    case "amount_with_comma_separator":
                        i = n(e, 2, ".", ",");
                        break;
                    case "amount_no_decimals_with_comma_separator":
                        i = n(e, 0, ".", ",");
                        break;
                    case "amount_no_decimals_with_space_separator":
                        i = n(e, 0, " ");
                        break;
                    case "amount_with_apostrophe_separator":
                        i = n(e, 2, "'")
                }
                return o.replace(r, i)
            }
        }
    }(), slate.Variants = function() {
        function t(t) {
            this.$container = t.$container, this.product = t.product, this.singleOptionSelector = t.singleOptionSelector, this.originalSelectorId = t.originalSelectorId, this.enableHistoryState = t.enableHistoryState, this.currentVariant = this._getVariantFromOptions(), this._firstupdateVariant(this.currentVariant), $(this.singleOptionSelector, this.$container).on("change", this._onSelectChange.bind(this)), this.sticky_atc = $(".pr-selectors .pr-swatch"), $(this.sticky_atc, this.$container).on("click", this._onSelectChange2.bind(this))
        }
        return t.prototype = _.assignIn({}, t.prototype, {
            _getCurrentOptions: function() {
                var t = _.map($(this.singleOptionSelector, this.$container), function(t) {
                    var e = $(t),
                        a = e.attr("type"),
                        i = {};
                    return "radio" === a || "checkbox" === a ? !!e[0].checked && (i.value = e.val(), i.index = e.data("index"), i) : (i.value = e.val(), i.index = e.data("index"), i)
                });
                return t = _.compact(t)
            },
            _getVariantFromOptions: function() {
                var t, e, a, i = this._getCurrentOptions(),
                    r = this.product.variants,
                    o = !1;
                $(".selector-wrapper-1", this.$container).hasClass("swatch") && (o = !0);
                var n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                });
                return null != n && 0 != n.available || (1 == o ? (t = $(".selector-wrapper-1", this.$container).find("input:checked").val(), e = $(".selector-wrapper-2", this.$container).find("input:checked").val(), a = $(".selector-wrapper-3", this.$container).find("input:checked").val(), $(".selector-wrapper-3 .swatch-element", this.$container).each(function() {
                    var a = $(this).data("value");
                    null == r.find(function(i) {
                        return i.option1 == t && i.option2 == e && i.option3 == a && i.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), i = this._getCurrentOptions(), null != (n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })) && 0 != n.available || ($(".selector-wrapper-3 .swatch-element", this.$container).each(function() {
                    var e = $(this).data("value");
                    null == r.find(function(a) {
                        return a.option1 == t && a.option3 == e && a.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), a = $(".selector-wrapper-3", this.$container).find("input:checked").val(), $(".selector-wrapper-2 .swatch-element", this.$container).each(function() {
                    var e = $(this).data("value");
                    null == r.find(function(i) {
                        return i.option1 == t && i.option3 == a && i.option2 == e && i.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), i = this._getCurrentOptions(), n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                }))) : (t = $(".selector-wrapper-1", this.$container).find("option:selected").val(), e = $(".selector-wrapper-2", this.$container).find("option:selected").val(), a = $(".selector-wrapper-3", this.$container).find("option:selected").val(), $(".selector-wrapper-3 .single-option-selector option", this.$container).each(function() {
                    var a = $(this).val();
                    null == r.find(function(i) {
                        return i.option1 == t && i.option2 == e && i.option3 == a && i.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), i = this._getCurrentOptions(), null != (n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })) && 0 != n.available || ($(".selector-wrapper-3 .single-option-selector option", this.$container).each(function() {
                    var e = $(this).val();
                    null == r.find(function(a) {
                        return a.option1 == t && a.option3 == e && a.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), a = $(".selector-wrapper-3", this.$container).find("option:selected").val(), $(".selector-wrapper-2 .single-option-selector option", this.$container).each(function() {
                    var e = $(this).val();
                    null == r.find(function(i) {
                        return i.option1 == t && i.option3 == a && i.option2 == e && i.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), i = this._getCurrentOptions(), n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })))), n
            },
            _getVariantFromOptions2: function(t) {
                t || (t = $(".pr-selectors .pr-swatch.active").data("title"));
                var e = this.product.variants;
                return _.find(e, function(e) {
                    return _.isEqual(e.title, t)
                })
            },
            _onSelectChange: function() {
                var t = this._getVariantFromOptions();
                this.$container.trigger({
                    type: "variantChange",
                    variant: t
                }), t && (this._updateMasterSelect(t), this._updateImages(t), this._updatePrice(t), this._updateSKU(t), this._updateVariant(t), this.currentVariant = t, this.enableHistoryState && this._updateHistoryState(t))
            },
            _onSelectChange2: function(t) {
                var e = this._getVariantFromOptions2($(t.currentTarget).data("title"));
                this.$container.trigger({
                    type: "variantChange",
                    variant: e
                }), e && (this._updateMasterSelect(e), this._updateImages(e), this._updatePrice(e), this._updateSKU(e), this._updateVariant2(e), this.currentVariant = e, this.enableHistoryState && this._updateHistoryState(e))
            },
            _updateImages: function(t) {
                var e = t.featured_image || {},
                    a = this.currentVariant.featured_image || {};
                t.featured_image && e.src !== a.src && this.$container.trigger({
                    type: "variantImageChange",
                    variant: t
                })
            },
            _updatePrice: function(t) {
                t.price === this.currentVariant.price && t.compare_at_price === this.currentVariant.compare_at_price || this.$container.trigger({
                    type: "variantPriceChange",
                    variant: t
                })
            },
            _updateSKU: function(t) {
                t.sku !== this.currentVariant.sku && this.$container.trigger({
                    type: "variantSKUChange",
                    variant: t
                })
            },
            _updateHistoryState: function(t) {
                if (history.replaceState && t) {
                    var e = window.location.protocol + "//" + window.location.host + window.location.pathname + "?variant=" + t.id;
                    window.history.replaceState({
                        path: e
                    }, "", e)
                }
            },
            _updateMasterSelect: function(t) {
                $(this.originalSelectorId, this.$container).val(t.id)
            },
            _firstupdateVariant: function(t) {
                var e = this,
                    a = !1;
                if ($(".selector-wrapper-1", this.$container).hasClass("swatch") && (a = !0), t) {
                    if (1 == a) {
                        var i = this.product.variants,
                            r = $(".selector-wrapper", this.$container),
                            o = $(".selector-wrapper-1", this.$container).find("input:checked").val(),
                            n = $(".selector-wrapper-2", this.$container).find("input:checked").val();
                        $(".selector-wrapper-3", this.$container).find("input:checked").val();
                        r.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find(".swatch-element");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == i.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == i.find(function(e) {
                                            return e.option1 == o && e.option2 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == i.find(function(e) {
                                            return e.option1 == o && e.option2 == n && e.option3 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    })
                            }
                        })
                    } else {
                        i = this.product.variants, r = $(".selector-wrapper", this.$container), o = $(".selector-wrapper-1", this.$container).find("option:selected").val(), n = $(".selector-wrapper-2", this.$container).find("option:selected").val(), $(".selector-wrapper-3", this.$container).find("option:selected").val();
                        r.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find("option");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == i.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == i.find(function(e) {
                                            return e.option1 == o && e.option2 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == i.find(function(e) {
                                            return e.option1 == o && e.option2 == n && e.option3 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    })
                            }
                        })
                    }
                    if (null == t.featured_media) return;
                    var s = t.featured_media.id;
                    $(document).ready(function() {
                        e._switchImage(s), e._setActiveThumbnail(s)
                    })
                }
            },
            _updateVariant: function(t) {
                var e = !1;
                if ($(".selector-wrapper-1", this.$container).hasClass("swatch") && (e = !0), t) {
                    var a = t.option1,
                        i = t.option2,
                        r = t.option3,
                        o = "";
                    if (this.currentVariant.option1 != a ? (o = a, "option1", $(".label-value-1", this.$container).html(o)) : this.currentVariant.option2 != i ? (o = i, "option2", $(".label-value-2", this.$container).html(o)) : this.currentVariant.option3 != r && (o = r, "option3", $(".label-value-3", this.$container).html(o)), 1 == e) {
                        var n = this.product.variants,
                            s = $(".selector-wrapper", this.$container),
                            c = $(".selector-wrapper-1", this.$container).find("input:checked").val(),
                            l = $(".selector-wrapper-2", this.$container).find("input:checked").val();
                        $(".selector-wrapper-3", this.$container).find("input:checked").val();
                        s.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find(".swatch-element");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == l && e.option3 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    })
                            }
                        })
                    } else {
                        n = this.product.variants, s = $(".selector-wrapper", this.$container), c = $(".selector-wrapper-1", this.$container).find("option:selected").val(), l = $(".selector-wrapper-2", this.$container).find("option:selected").val(), $(".selector-wrapper-3", this.$container).find("option:selected").val();
                        s.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find("option");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == l && e.option3 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    })
                            }
                        })
                    }
                }
            },
            _updateVariant2: function(t) {
                t && _.map($(this.singleOptionSelector, this.$container), function(e) {
                    var a = $(e),
                        i = a.data("index"),
                        r = a.val();
                    _.isEqual(t[i], r) && (t.available ? (a.removeAttr("disabled"), a.parent().removeClass("soldout"), a.attr("checked", !0)) : (a.attr("disabled", "disabled"), a.parent().addClass("soldout"), a[0].checked && $("[name=" + a.attr("name") + "]:first").attr("checked", !0)))
                })
            },
            _switchImage: function(t) {
                var e = $(".product_template .product-single__photo[data-image-id='" + t + "']"),
                    a = $(".product_template .product-single__photo:not([data-image-id='" + t + "'])");
                $(".product_template .product-slider").hasClass("custom") && (e.removeClass("hide"), a.addClass("hide"))
            },
            _setActiveThumbnail: function(t) {
                void 0 === t && (t = $(".product_template .product-single__photo:not(.hide)").data("image-id"));
                var e = $(".product_template .product-single__thumbnails-item:not(.slick-cloned)"),
                    a = e.find(".product-single__thumbnail--product-template[data-thumbnail-id='" + t + "']");
                if ($(".product-single__thumbnail--product-template").removeClass("active-thumb").removeAttr("aria-current"), a.addClass("active-thumb"), a.attr("aria-current", !0), e.hasClass("slick-slide")) {
                    var i = a.parent().data("slick-index");
                    $(".product-single__thumbnails-product-template").slick("slickGoTo", i)
                }
            }
        }), t
    }(), slate.Variants2 = function() {
        function t(t) {
            this.$container = t.$container, this.product = t.product, this.singleOptionSelector = t.singleOptionSelector, this.originalSelectorId = t.originalSelectorId, this.enableHistoryState = t.enableHistoryState, this.currentVariant = this._getVariantFromOptions(), this._firstupdateVariant(this.currentVariant), $(this.singleOptionSelector, this.$container).on("change", this._onSelectChange.bind(this))
        }
        return t.prototype = _.assignIn({}, t.prototype, {
            _getCurrentOptions: function() {
                var t = _.map($(this.singleOptionSelector, this.$container), function(t) {
                    var e = $(t),
                        a = e.attr("type"),
                        i = {};
                    return "radio" === a || "checkbox" === a ? !!e[0].checked && (i.value = e.val(), i.index = e.data("index"), i) : (i.value = e.val(), i.index = e.data("index"), i)
                });
                return t = _.compact(t)
            },
            _getVariantFromOptions: function() {
                var t, e, a, i = this._getCurrentOptions(),
                    r = this.product.variants,
                    o = !1;
                $(".selector-wrapper-1", this.$container).hasClass("swatch") && (o = !0);
                var n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                });
                return null != n && 0 != n.available || (1 == o ? (t = $(".selector-wrapper-1", this.$container).find("input:checked").val(), e = $(".selector-wrapper-2", this.$container).find("input:checked").val(), a = $(".selector-wrapper-3", this.$container).find("input:checked").val(), $(".selector-wrapper-3 .swatch-element", this.$container).each(function() {
                    var a = $(this).data("value");
                    null == r.find(function(i) {
                        return i.option1 == t && i.option2 == e && i.option3 == a && i.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), i = this._getCurrentOptions(), null != (n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })) && 0 != n.available || ($(".selector-wrapper-3 .swatch-element", this.$container).each(function() {
                    var e = $(this).data("value");
                    null == r.find(function(a) {
                        return a.option1 == t && a.option3 == e && a.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), a = $(".selector-wrapper-3", this.$container).find("input:checked").val(), $(".selector-wrapper-2 .swatch-element", this.$container).each(function() {
                    var e = $(this).data("value");
                    null == r.find(function(i) {
                        return i.option1 == t && i.option3 == a && i.option2 == e && i.available
                    }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1), $(this).find(":radio").prop("checked", !0))
                }), i = this._getCurrentOptions(), n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                }))) : (t = $(".selector-wrapper-1", this.$container).find("option:selected").val(), e = $(".selector-wrapper-2", this.$container).find("option:selected").val(), a = $(".selector-wrapper-3", this.$container).find("option:selected").val(), $(".selector-wrapper-3 .single-option-selector option", this.$container).each(function() {
                    var a = $(this).val();
                    null == r.find(function(i) {
                        return i.option1 == t && i.option2 == e && i.option3 == a && i.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), i = this._getCurrentOptions(), null != (n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })) && 0 != n.available || ($(".selector-wrapper-3 .single-option-selector option", this.$container).each(function() {
                    var e = $(this).val();
                    null == r.find(function(a) {
                        return a.option1 == t && a.option3 == e && a.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), a = $(".selector-wrapper-3", this.$container).find("option:selected").val(), $(".selector-wrapper-2 .single-option-selector option", this.$container).each(function() {
                    var e = $(this).val();
                    null == r.find(function(i) {
                        return i.option1 == t && i.option3 == a && i.option2 == e && i.available
                    }) ? $(this).attr("disabled", "disabled").removeAttr("selected", "selected").prop("selected", !1) : $(this).removeAttr("disabled", "disabled").attr("selected", "selected").prop("selected", !0)
                }), i = this._getCurrentOptions(), n = _.find(r, function(t) {
                    return i.every(function(e) {
                        return _.isEqual(t[e.index], e.value)
                    })
                })))), n
            },
            _onSelectChange: function() {
                var t = this._getVariantFromOptions();
                this.$container.trigger({
                    type: "variantChange",
                    variant: t
                }), t && (this._updateMasterSelect(t), this._updateImages(t), this._updatePrice(t), this._updateSKU(t), this._updateVariant(t), this.currentVariant = t, this.enableHistoryState && this._updateHistoryState(t))
            },
            _updateImages: function(t) {
                var e = t.featured_image || {},
                    a = this.currentVariant.featured_image || {};
                t.featured_image && e.src !== a.src && this.$container.trigger({
                    type: "variantImageChange",
                    variant: t
                })
            },
            _updatePrice: function(t) {
                t.price === this.currentVariant.price && t.compare_at_price === this.currentVariant.compare_at_price || this.$container.trigger({
                    type: "variantPriceChange",
                    variant: t
                })
            },
            _updateSKU: function(t) {
                t.sku !== this.currentVariant.sku && this.$container.trigger({
                    type: "variantSKUChange",
                    variant: t
                })
            },
            _updateHistoryState: function(t) {
                if (history.replaceState && t) {
                    var e = window.location.protocol + "//" + window.location.host + window.location.pathname;
                    window.history.replaceState({
                        path: e
                    }, "", e)
                }
            },
            _updateMasterSelect: function(t) {
                $(this.originalSelectorId, this.$container).val(t.id)
            },
            _firstupdateVariant: function(t) {
                var e = !1;
                if ($(".selector-wrapper-1", this.$container).hasClass("swatch") && (e = !0), t)
                    if (1 == e) {
                        var a = this.product.variants,
                            i = $(".selector-wrapper", this.$container),
                            r = $(".selector-wrapper-1", this.$container).find("input:checked").val(),
                            o = $(".selector-wrapper-2", this.$container).find("input:checked").val();
                        $(".selector-wrapper-3", this.$container).find("input:checked").val();
                        i.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find(".swatch-element");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == a.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == a.find(function(e) {
                                            return e.option1 == r && e.option2 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == a.find(function(e) {
                                            return e.option1 == r && e.option2 == o && e.option3 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    })
                            }
                        })
                    } else {
                        a = this.product.variants, i = $(".selector-wrapper", this.$container), r = $(".selector-wrapper-1", this.$container).find("option:selected").val(), o = $(".selector-wrapper-2", this.$container).find("option:selected").val(), $(".selector-wrapper-3", this.$container).find("option:selected").val();
                        i.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find("option");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == a.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == a.find(function(e) {
                                            return e.option1 == r && e.option2 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == a.find(function(e) {
                                            return e.option1 == r && e.option2 == o && e.option3 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    })
                            }
                        })
                    }
            },
            _updateVariant: function(t) {
                var e = !1;
                if ($(".selector-wrapper-1", this.$container).hasClass("swatch") && (e = !0), t) {
                    var a = t.option1,
                        i = t.option2,
                        r = t.option3,
                        o = "";
                    if (this.currentVariant.option1 != a ? (o = a, "option1", $(".label-value-1", this.$container).html(o)) : this.currentVariant.option2 != i ? (o = i, "option2", $(".label-value-2", this.$container).html(o)) : this.currentVariant.option3 != r && (o = r, "option3", $(".label-value-3", this.$container).html(o)), 1 == e) {
                        var n = this.product.variants,
                            s = $(".selector-wrapper", this.$container),
                            c = $(".selector-wrapper-1", this.$container).find("input:checked").val(),
                            l = $(".selector-wrapper-2", this.$container).find("input:checked").val();
                        $(".selector-wrapper-3", this.$container).find("input:checked").val();
                        s.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find(".swatch-element");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).data("value");
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == l && e.option3 == t && e.available
                                        }) ? ($(this).addClass("soldout"), $(this).find(":radio").prop("disabled", !0)) : ($(this).removeClass("soldout"), $(this).find(":radio").prop("disabled", !1))
                                    })
                            }
                        })
                    } else {
                        n = this.product.variants, s = $(".selector-wrapper", this.$container), c = $(".selector-wrapper-1", this.$container).find("option:selected").val(), l = $(".selector-wrapper-2", this.$container).find("option:selected").val(), $(".selector-wrapper-3", this.$container).find("option:selected").val();
                        s.each(function() {
                            var t = $(this).data("option-index"),
                                e = $(this).find("option");
                            switch (t) {
                                case 1:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 2:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    });
                                    break;
                                case 3:
                                    e.each(function() {
                                        var t = $(this).val();
                                        null == n.find(function(e) {
                                            return e.option1 == c && e.option2 == l && e.option3 == t && e.available
                                        }) ? $(this).attr("disabled", "disabled") : $(this).removeAttr("disabled", "disabled")
                                    })
                            }
                        })
                    }
                }
            }
        }), t
    }(), theme.Drawers = function() {
        function t(t, e, a) {
            var i = {
                close: ".js-drawer-close",
                open: ".js-drawer-open-" + e,
                openClass: "js-drawer-open",
                dirOpenClass: "js-drawer-open-" + e
            };
            if (this.nodes = {
                    $parent: $("html").add("body"),
                    $page: $("#PageContainer")
                }, this.config = $.extend(i, a), this.position = e, this.$drawer = $("#" + t), !this.$drawer.length) return !1;
            this.drawerIsOpen = !1, this.init()
        }
        return t.prototype.init = function() {
            $(this.config.open).on("click", $.proxy(this.open, this)), this.$drawer.on("click", this.config.close, $.proxy(this.close, this))
        }, t.prototype.open = function(t) {
            var e = !1;
            return t ? t.preventDefault() : e = !0, t && t.stopPropagation && (t.stopPropagation(), this.$activeSource = $(t.currentTarget)), this.drawerIsOpen && !e ? this.close() : (this.$drawer.prepareTransition(), this.nodes.$parent.addClass(this.config.openClass + " " + this.config.dirOpenClass), this.drawerIsOpen = !0, slate.a11y.trapFocus({
                $container: this.$drawer,
                namespace: "drawer_focus"
            }), this.config.onDrawerOpen && "function" == typeof this.config.onDrawerOpen && (e || this.config.onDrawerOpen()), this.$activeSource && this.$activeSource.attr("aria-expanded") && this.$activeSource.attr("aria-expanded", "true"), this.bindEvents(), this)
        }, t.prototype.close = function() {
            this.drawerIsOpen && ($(document.activeElement).trigger("blur"), this.$drawer.prepareTransition(), this.nodes.$parent.removeClass(this.config.dirOpenClass + " " + this.config.openClass), this.$activeSource && this.$activeSource.attr("aria-expanded") && this.$activeSource.attr("aria-expanded", "false"), this.drawerIsOpen = !1, slate.a11y.removeTrapFocus({
                $container: this.$drawer,
                namespace: "drawer_focus"
            }), this.unbindEvents(), this.config.onDrawerClose && "function" == typeof this.config.onDrawerClose && this.config.onDrawerClose())
        }, t.prototype.bindEvents = function() {
            this.nodes.$parent.on("keyup.drawer", $.proxy(function(t) {
                return 27 !== t.keyCode || (this.close(), !1)
            }, this)), this.nodes.$page.on("touchmove.drawer", function() {
                return !1
            }), this.nodes.$page.on("click.drawer", $.proxy(function() {
                return this.close(), !1
            }, this))
        }, t.prototype.unbindEvents = function() {
            this.nodes.$page.off(".drawer"), this.nodes.$parent.off(".drawer")
        }, t
    }(), window.theme = window.theme || {}, theme.Search = function() {
        var t = {
                search: ".search",
                searchSubmit: ".search__submit",
                searchInput: ".search__input",
                siteHeader: ".site-header",
                siteHeaderSearchToggle: ".site-header__search-toggle",
                siteHeaderSearch: ".site-header__search",
                searchDrawer: ".search-bar",
                searchDrawerInput: ".search-bar__input",
                searchHeader: ".search-header",
                searchHeaderInput: ".search-header__input",
                searchHeaderSubmit: ".search-header__submit",
                searchResultSubmit: "#SearchResultSubmit",
                searchResultInput: "#SearchInput",
                searchResultMessage: "[data-search-error-message]",
                mobileNavWrapper: ".mobile-nav-wrapper"
            },
            e = {
                focus: "search--focus",
                hidden: "hide",
                mobileNavIsOpen: "js-menu--is-open",
                searchTemplate: "template-search"
            };

        function a() {
            i($(t.searchDrawerInput))
        }

        function i(t) {
            t.focus(), t[0].setSelectionRange(0, t[0].value.length)
        }

        function r() {
            $(t.siteHeaderSearchToggle).focus()
        }

        function o(t) {
            0 === this.$searchResultInput.val().trim().length ? (void 0 !== t && t.preventDefault(), i(this.$searchResultInput), function() {
                this.$searchErrorMessage.removeClass(e.hidden), this.$searchResultInput.attr("aria-describedby", "error-search-form").attr("aria-invalid", !0)
            }.call(this)) : function() {
                this.$searchErrorMessage.addClass(e.hidden), this.$searchResultInput.removeAttr("aria-describedby").removeAttr("aria-invalid")
            }.call(this)
        }
        return {
            init: function() {
                $(t.siteHeader).length && (this.$searchResultInput = $(t.searchResultInput), this.$searchErrorMessage = $(t.searchResultMessage), $("#PageContainer").addClass("drawer-page-content"), $(".js-drawer-open-top").attr("aria-controls", "SearchDrawer").attr("aria-expanded", "false").attr("aria-haspopup", "dialog"), theme.SearchDrawer = new theme.Drawers("SearchDrawer", "top", {
                    onDrawerOpen: a,
                    onDrawerClose: r
                }), null !== slate.utils.getParameterByName("q") && $("body").hasClass(e.searchTemplate) && o.call(this), $(t.searchResultSubmit).on("click", o.bind(this)), $(t.searchHeaderInput).add(t.searchHeaderSubmit).on("focus blur", function() {
                    $(t.searchHeader).toggleClass(e.focus)
                }), $(t.siteHeaderSearchToggle).on("click", function() {
                    var e = $(t.siteHeader).outerHeight(),
                        a = $(t.siteHeader).offset().top - e;
                    $(t.searchDrawer).css({
                        height: e + "px",
                        top: a + "px"
                    })
                }))
            }
        }
    }(),
    function() {
        var t = $(".return-link");

        function e(t) {
            var e = document.createElement("a");
            return e.ref = t, e.hostname
        }
        document.referrer && t.length && window.history.length && t.one("click", function(t) {
            t.preventDefault();
            var a = e(document.referrer);
            return e(window.location.href) === a && history.back(), !1
        })
    }(), theme.Video = function() {
        var t = !1,
            e = !1,
            a = !1,
            i = !1,
            r = {},
            o = [],
            n = {
                ratio: 16 / 9,
                scrollAnimationDuration: 400,
                playerVars: {
                    iv_load_policy: 3,
                    modestbranding: 1,
                    autoplay: 0,
                    controls: 0,
                    wmode: "opaque",
                    branding: 0,
                    autohide: 0,
                    rel: 0
                },
                events: {
                    onReady: function(t) {
                        t.target.setPlaybackQuality("hd1080");
                        var e = g(t);
                        h(), $("#" + e.id).attr("tabindex", "-1"), y(), "background" === e.type && (t.target.mute(), p(e.id));
                        e.$videoWrapper.addClass(s.loaded)
                    },
                    onStateChange: function(e) {
                        var a = g(e);
                        "background" !== a.status || C() || t || e.data !== YT.PlayerState.PLAYING && e.data !== YT.PlayerState.BUFFERING || (u(!0), t = !0, a.$videoWrapper.removeClass(s.loading));
                        switch (e.data) {
                            case YT.PlayerState.ENDED:
                                ! function(t) {
                                    switch (t.type) {
                                        case "background":
                                            o[t.id].seekTo(0);
                                            break;
                                        case "image_with_play":
                                            v(t.id), b(t.id, !1)
                                    }
                                }(a);
                                break;
                            case YT.PlayerState.PAUSED:
                                setTimeout(function() {
                                    e.target.getPlayerState() === YT.PlayerState.PAUSED && f(a)
                                }, 200)
                        }
                    }
                }
            },
            s = {
                playing: "video-is-playing",
                paused: "video-is-paused",
                loading: "video-is-loading",
                loaded: "video-is-loaded",
                backgroundVideoWrapper: "video-background-wrapper",
                videoWithImage: "video--image_with_play",
                backgroundVideo: "video--background",
                userPaused: "is-paused",
                supportsAutoplay: "autoplay",
                supportsNoAutoplay: "no-autoplay",
                wrapperMinHeight: "video-section-wrapper--min-height"
            },
            c = {
                section: ".video-section",
                videoWrapper: ".video-section-wrapper",
                playVideoBtn: ".video-control__play",
                closeVideoBtn: ".video-control__close-wrapper",
                pauseVideoBtn: ".video__pause"
            };

        function l(t) {
            (e || a) && t && "function" == typeof o[t].playVideo && p(t)
        }

        function d(t) {
            o[t] && "function" == typeof o[t].pauseVideo && o[t].pauseVideo()
        }

        function p(e, i) {
            var n = r[e],
                c = o[e],
                l = n.$videoWrapper;
            if (a) m(n);
            else {
                if (i || t) return l.removeClass(s.loading), m(n), void c.playVideo();
                c.playVideo()
            }
        }

        function u(e) {
            var i = e ? s.supportsAutoplay : s.supportsNoAutoplay;
            $(document.documentElement).removeClass(s.supportsAutoplay).removeClass(s.supportsNoAutoplay).addClass(i), e || (a = !0), t = !0
        }

        function h() {
            e || (C() && (a = !0), a && u(!1), e = !0)
        }

        function m(t) {
            var e = t.$videoWrapper,
                a = e.find(c.pauseVideoBtn);
            e.removeClass(s.loading), a.hasClass(s.userPaused) && a.removeClass(s.userPaused), "background" !== t.status && ($("#" + t.id).attr("tabindex", "0"), "image_with_play" === t.type && e.removeClass(s.paused).addClass(s.playing), setTimeout(function() {
                e.find(c.closeVideoBtn).focus()
            }, n.scrollAnimationDuration))
        }

        function f(t) {
            var e = t.$videoWrapper;
            "image_with_play" === t.type && ("closed" === t.status ? e.removeClass(s.paused) : e.addClass(s.paused)), e.removeClass(s.playing)
        }

        function v(t) {
            var e = r[t],
                a = e.$videoWrapper,
                i = [s.paused, s.playing].join(" ");
            switch (C() && a.removeAttr("style"), $("#" + e.id).attr("tabindex", "-1"), e.status = "closed", e.type) {
                case "image_with_play":
                    o[t].stopVideo(), f(e);
                    break;
                case "background":
                    o[t].mute(),
                        function(t) {
                            $("#" + t).removeClass(s.videoWithImage).addClass(s.backgroundVideo), r[t].$videoWrapper.addClass(s.backgroundVideoWrapper), r[t].status = "background", _($("#" + t))
                        }(t)
            }
            a.removeClass(i)
        }

        function g(t) {
            var e = t.target.a ? t.target.a : t.target.f;
            return r[e.id]
        }

        function b(t, e) {
            var a = r[t],
                i = a.$videoWrapper.offset().top,
                o = a.$videoWrapper.find(c.playVideoBtn),
                l = 0,
                d = 0;
            C() && a.$videoWrapper.parent().toggleClass("page-width", !e), e ? (d = C() ? $(window).width() / n.ratio : a.$videoWrapper.width() / n.ratio, l = ($(window).height() - d) / 2, a.$videoWrapper.removeClass(s.wrapperMinHeight).animate({
                height: d
            }, 600), C() && Shopify.designMode || $("html, body").animate({
                scrollTop: i - l
            }, n.scrollAnimationDuration)) : (d = C() ? a.$videoWrapper.data("mobile-height") : a.$videoWrapper.data("desktop-height"), a.$videoWrapper.height(a.$videoWrapper.width() / n.ratio).animate({
                height: d
            }, 600), setTimeout(function() {
                a.$videoWrapper.addClass(s.wrapperMinHeight)
            }, 600), o.focus())
        }

        function w(t) {
            var e = r[t];
            switch (e.$videoWrapper.addClass(s.loading), e.$videoWrapper.attr("style", "height: " + e.$videoWrapper.height() + "px"), e.status = "open", e.type) {
                case "image_with_play":
                    p(t, !0);
                    break;
                case "background":
                    ! function(t) {
                        $("#" + t).removeClass(s.backgroundVideo).addClass(s.videoWithImage), setTimeout(function() {
                            $("#" + t).removeAttr("style")
                        }, 600), r[t].$videoWrapper.removeClass(s.backgroundVideoWrapper).addClass(s.playing), r[t].status = "open"
                    }(t), o[t].unMute(), p(t, !0)
            }
            b(t, !0), $(document).on("keydown.videoPlayer", function(t) {
                var e = $(document.activeElement).data("controls");
                t.keyCode === slate.utils.keyboardKeys.ESCAPE && e && (v(e), b(e, !1))
            })
        }

        function y() {
            $("." + s.backgroundVideo).each(function(t, e) {
                _($(e))
            })
        }

        function _(t) {
            if (i)
                if (C()) t.removeAttr("style");
                else {
                    var e = t.closest(c.videoWrapper),
                        a = e.width(),
                        r = t.width(),
                        o = e.data("desktop-height");
                    a / n.ratio < o ? (r = Math.ceil(o * n.ratio), t.width(r).height(o).css({
                        left: (a - r) / 2,
                        top: 0
                    })) : (o = Math.ceil(a / n.ratio), t.width(a).height(o).css({
                        left: 0,
                        top: (o - o) / 2
                    })), t.prepareTransition(), e.addClass(s.loaded)
                }
        }

        function C() {
            return $(window).width() < 750 || window.mobileCheck()
        }

        function k() {
            $(document).on("click.videoPlayer", c.playVideoBtn, function(t) {
                w($(t.currentTarget).data("controls"))
            }), $(document).on("click.videoPlayer", c.closeVideoBtn, function(t) {
                var e = $(t.currentTarget).data("controls");
                $(t.currentTarget).blur(), v(e), b(e, !1)
            }), $(document).on("click.videoPlayer", c.pauseVideoBtn, function(t) {
                ! function(t) {
                    var e = r[t].$videoWrapper.find(c.pauseVideoBtn),
                        a = e.hasClass(s.userPaused);
                    a ? (e.removeClass(s.userPaused), l(t)) : (e.addClass(s.userPaused), d(t)), e.attr("aria-pressed", !a)
                }($(t.currentTarget).data("controls"))
            }), $(window).on("resize.videoPlayer", $.debounce(200, function() {
                if (i) {
                    var t, e = window.innerHeight === screen.height;
                    if (y(), C()) {
                        for (t in r) r.hasOwnProperty(t) && (r[t].$videoWrapper.hasClass(s.playing) && (e || (d(t), f(r[t]))), r[t].$videoWrapper.height($(document).width() / n.ratio));
                        u(!1)
                    } else
                        for (t in u(!0), r) r[t].$videoWrapper.find("." + s.videoWithImage).length || (o[t].playVideo(), m(r[t]))
                }
            })), $(window).on("scroll.videoPlayer", $.debounce(50, function() {
                if (i)
                    for (var t in r)
                        if (r.hasOwnProperty(t)) {
                            var e = r[t].$videoWrapper;
                            e.hasClass(s.playing) && (e.offset().top + .75 * e.height() < $(window).scrollTop() || e.offset().top + .25 * e.height() > $(window).scrollTop() + $(window).height()) && (v(t), b(t, !1))
                        }
            }))
        }

        function P(t) {
            var e = $.extend({}, n, r[t]);
            e.playerVars.controls = e.controls, o[t] = new YT.Player(t, e)
        }
        return {
            init: function(t) {
                if (t.length) {
                    if (r[t.attr("id")] = {
                            id: t.attr("id"),
                            videoId: t.data("id"),
                            type: t.data("type"),
                            status: "image_with_play" === t.data("type") ? "closed" : "background",
                            $video: t,
                            $videoWrapper: t.closest(c.videoWrapper),
                            $section: t.closest(c.section),
                            controls: "background" === t.data("type") ? 0 : 1
                        }, !i) {
                        var e = document.createElement("script");
                        e.src = "https://www.youtube.com/iframe_api";
                        var a = document.getElementsByTagName("script")[0];
                        a.parentNode.insertBefore(e, a)
                    }
                    h()
                }
            },
            editorLoadVideo: function(t) {
                i && (P(t), k())
            },
            loadVideos: function() {
                for (var t in r) r.hasOwnProperty(t) && P(t);
                k(), i = !0
            },
            playVideo: l,
            pauseVideo: d,
            removeEvents: function() {
                $(document).off(".videoPlayer"), $(window).off(".videoPlayer")
            }
        }
    }(), window.theme = window.theme || {}, theme.FormStatus = function() {
        var t = {
            statusMessage: "[data-form-status]"
        };
        return {
            init: function() {
                this.$statusMessage = $(t.statusMessage), this.$statusMessage && (this.$statusMessage.attr("tabindex", -1).focus(), this.$statusMessage.on("blur", function() {
                    this.$statusMessage.removeAttr("tabindex")
                }.bind(this)))
            }
        }
    }(),
    function() {
        var t = $("#BlogTagFilter");
        t.length && t.on("change", function() {
            location.href = $(this).val()
        })
    }(), window.theme = theme || {}, theme.customerTemplates = function() {
        var t = {
            RecoverHeading: "#RecoverHeading",
            RecoverEmail: "#RecoverEmail",
            LoginHeading: "#LoginHeading"
        };

        function e() {
            this.$RecoverHeading = $(t.RecoverHeading), this.$RecoverEmail = $(t.RecoverEmail), this.$LoginHeading = $(t.LoginHeading), $("#RecoverPassword").on("click", function(t) {
                t.preventDefault(), a(), this.$RecoverHeading.attr("tabindex", "-1").focus()
            }.bind(this)), $("#HideRecoverPasswordLink").on("click", function(t) {
                t.preventDefault(), $("#RecoverPasswordForm").addClass("hide"), $("#CustomerLoginForm").removeClass("hide"), $("#CustomerRegisterForm").removeClass("hide"), this.$LoginHeading.attr("tabindex", "-1").focus()
            }.bind(this)), this.$RecoverHeading.on("blur", function() {
                $(this).removeAttr("tabindex")
            }), this.$LoginHeading.on("blur", function() {
                $(this).removeAttr("tabindex")
            })
        }

        function a() {
            $("#RecoverPasswordForm").removeClass("hide"), $("#CustomerLoginForm").addClass("hide"), $("#CustomerRegisterForm").addClass("hide"), "true" === this.$RecoverEmail.attr("aria-invalid") && this.$RecoverEmail.focus()
        }
        return {
            init: function() {
                var t, i;
                e(),
                    function() {
                        "#recover" === window.location.hash && a.bind(this)()
                    }(), $(".reset-password-success").length && $("#ResetSuccess").removeClass("hide").focus(), t = $("#AddressNewForm"), i = $("#AddressNewButton"), t.length && (Shopify && new Shopify.CountryProvinceSelector("AddressCountryNew", "AddressProvinceNew", {
                        hideElement: "AddressProvinceContainerNew"
                    }), $(".address-country-option").each(function() {
                        var t = $(this).data("form-id"),
                            e = "AddressCountry_" + t,
                            a = "AddressProvince_" + t,
                            i = "AddressProvinceContainer_" + t;
                        new Shopify.CountryProvinceSelector(e, a, {
                            hideElement: i
                        })
                    }), $(".address-new-toggle").on("click", function() {
                        var e = "true" === i.attr("aria-expanded");
                        t.toggleClass("hide"), i.attr("aria-expanded", !e).focus()
                    }), $(".address-edit-toggle").on("click", function() {
                        var t = $(this).data("form-id"),
                            e = $("#EditFormButton_" + t),
                            a = $("#EditAddress_" + t),
                            i = "true" === e.attr("aria-expanded");
                        a.toggleClass("hide"), e.attr("aria-expanded", !i).focus()
                    }), $(".address-delete").on("click", function() {
                        var t = $(this),
                            e = t.data("target"),
                            a = t.data("confirm-message");
                        confirm(a || "Are you sure you wish to delete this address?") && Shopify.postLink(e, {
                            parameters: {
                                _method: "delete"
                            }
                        })
                    }))
            }
        }
    }(), window.theme = window.theme || {}, theme.Cart = function() {
        var t = {
                edit: ".js-edit-toggle",
                inputQty: ".cart__qty-input",
                thumbnails: ".cart__image",
                item: ".cart__row"
            },
            e = {
                showClass: "cart__update--show",
                showEditClass: "cart__edit--active",
                cartNoCookies: "cart--no-cookies"
            };

        function a(a) {
            this.$container = $(a), this.$edit = $(t.edit, this.$container), this.$inputQuantities = $(t.inputQty, this.$container), this.$thumbnails = $(t.thumbnails, this.$container), this.cookiesEnabled() || this.$container.addClass(e.cartNoCookies), this.$edit.on("click", this._onEditClick), this.$inputQuantities.on("change", this._handleInputQty), this.$thumbnails.css("cursor", "pointer"), this.$thumbnails.on("click", this._handleThumbnailClick)
        }
        return a.prototype = _.assignIn({}, a.prototype, {
            onUnload: function() {
                this.$edit.off("click", this._onEditClick)
            },
            _onEditClick: function(t) {
                var a = $(t.target),
                    i = $("." + a.data("target")),
                    r = "true" === a.attr("aria-expanded");
                a.toggleClass(e.showEditClass).attr("aria-expanded", !r), i.toggleClass(e.showClass)
            },
            _handleInputQty: function(t) {
                var e = $(t.target),
                    a = e.val(),
                    i = e.data("quantity-item");
                $("[data-quantity-item=" + i + "]").val(a)
            },
            _handleThumbnailClick: function(t) {
                var e = $(t.target).data("item-url");
                window.location.href = e
            },
            cookiesEnabled: function() {
                var t = navigator.cookieEnabled;
                return t || (document.cookie = "testcookie", t = -1 !== document.cookie.indexOf("testcookie")), t
            }
        }), a
    }(), window.theme = window.theme || {}, theme.Filters = function() {
        var t = "screen and (min-width: 750px)",
            e = "sort_by",
            a = {
                mainContent: "#MainContent",
                filterSelection: "#FilterTags",
                sortSelection: "#SortBy",
                pagination: "#showPagination"
            },
            i = "data-default-sortby";

        function r(t) {
            var e = this.$container = $(t);
            this.$pagination = $(a.pagination, e), this.$filterSelect = $(a.filterSelection, e), this.$sortSelect = $(a.sortSelection, e), this.$selects = $(a.pagination, e).add($(a.sortSelection, e)), this.defaultSort = this._getDefaultSortValue(), this.$selects.removeClass("hidden"), this.$pagination.on("change", this._onPaginationChange.bind(this)), this._initBreakpoints()
        }
        return r.prototype = _.assignIn({}, r.prototype, {
            _initBreakpoints: function() {
                var e = this;
                enquire.register(t, {
                    match: function() {
                        e._resizeSelect(e.$selects)
                    }
                })
            },
            _onPaginationChange: function() {
                var t = this._getPaginationValue();
                $.ajax({
                    type: "Post",
                    url: window.router + "/cart.js",
                    data: {
                        "attributes[pagination]": t
                    },
                    success: function(t) {
                        window.location.reload()
                    },
                    dataType: "json"
                })
            },
            _getPaginationValue: function() {
                return this.$pagination.val()
            },
            _onSortChange: function() {
                var t = this._sortValue(),
                    e = window.location.href.replace(window.location.search, ""),
                    i = slate.utils.getParameterByName("q"),
                    r = null !== i ? i : "";
                if (t.length) {
                    var o = e.replace(window.location.hash, "");
                    r = "" !== r ? "?q=" + r + "&" : "?", window.location.href = o + r + t + a.mainContent
                } else window.location.href = e
            },
            _onFilterChange: function() {
                var t = this._getFilterValue(),
                    e = document.location.search.replace(/\?(page=\w+)?&?/, "");
                e = "" !== e ? "?" + e : "", document.location.href = t + e + a.mainContent
            },
            _getFilterValue: function() {
                return this.$filterSelect.val()
            },
            _getSortValue: function() {
                return this.$sortSelect.val() || this.defaultSort
            },
            _getDefaultSortValue: function() {
                return this.$sortSelect.attr(i)
            },
            _sortValue: function() {
                var t = this._getSortValue(),
                    a = "";
                return t !== this.defaultSort && (a = e + "=" + t), a
            },
            _resizeSelect: function(t) {
                t.each(function() {
                    var t = $(this).find("option:selected").text(),
                        e = $("<span>").html(t);
                    e.appendTo("body");
                    e.width();
                    e.remove()
                })
            },
            onUnload: function() {}
        }), r
    }(), theme.Maps = function() {
        var t = 14,
            e = null,
            a = [],
            i = {
                addressNoResults: theme.strings.addressNoResults,
                addressQueryLimit: theme.strings.addressQueryLimit,
                addressError: theme.strings.addressError,
                authError: theme.strings.authError
            },
            r = {
                section: '[data-section-type="map"]',
                map: "[data-map]",
                mapOverlay: "[data-map-overlay]"
            },
            o = "map-section--load-error",
            n = "map-section__error errors text-center";

        function s(t) {
            this.$container = $(t), this.$map = this.$container.find(r.map), this.key = this.$map.data("api-key"), void 0 !== this.key && ("loaded" === e ? this.createMap() : (a.push(this), "loading" !== e && (e = "loading", void 0 === window.google && $.getScript("https://maps.googleapis.com/maps/api/js?key=" + this.key).then(function() {
                e = "loaded", $.each(a, function(t, e) {
                    e.createMap()
                })
            }))))
        }
        return window.gm_authFailure = function() {
            Shopify.designMode && ($(r.section).addClass(o), $(r.map).remove(), $(r.mapOverlay).after('<div class="' + n + '">' + theme.strings.authError + "</div>"))
        }, s.prototype = _.assignIn({}, s.prototype, {
            createMap: function() {
                var e = this.$map;
                return function(t) {
                    var e = $.Deferred(),
                        a = new google.maps.Geocoder,
                        i = t.data("address-setting");
                    return a.geocode({
                        address: i
                    }, function(t, a) {
                        a !== google.maps.GeocoderStatus.OK && e.reject(a), e.resolve(t)
                    }), e
                }(e).then(function(a) {
                    var i = {
                            zoom: t,
                            center: a[0].geometry.location,
                            draggable: !1,
                            clickableIcons: !1,
                            scrollwheel: !1,
                            disableDoubleClickZoom: !0,
                            disableDefaultUI: !0
                        },
                        r = this.map = new google.maps.Map(e[0], i),
                        o = this.center = r.getCenter();
                    new google.maps.Marker({
                        map: r,
                        position: r.getCenter()
                    });
                    google.maps.event.addDomListener(window, "resize", $.debounce(250, function() {
                        google.maps.event.trigger(r, "resize"), r.setCenter(o), e.removeAttr("style")
                    }))
                }.bind(this)).fail(function() {
                    var t;
                    switch (status) {
                        case "ZERO_RESULTS":
                            t = i.addressNoResults;
                            break;
                        case "OVER_QUERY_LIMIT":
                            t = i.addressQueryLimit;
                            break;
                        case "REQUEST_DENIED":
                            t = i.authError;
                            break;
                        default:
                            t = i.addressError
                    }
                    Shopify.designMode && e.parent().addClass(o).html('<div class="' + n + '">' + t + "</div>")
                })
            },
            onUnload: function() {
                0 !== this.$map.length && google.maps.event.clearListeners(this.map, "resize")
            }
        }), s
    }(), theme.Product = function() {
        function t(t) {
            var e = this.$container = $(t),
                a = e.attr("data-section-id");
            this.settings = {
                mediaQueryMediumUp: "screen and (min-width: 1025px)",
                mediaQuerySmall: "screen and (max-width: 1024px)",
                bpSmall: !1,
                enableHistoryState: e.data("enable-history-state") || !1,
                namespace: ".slideshow-" + a,
                sectionId: a,
                sliderActive: !1,
                zoomEnabled: !1
            }, this.selectors = {
                addToCart: "[data-add-to-cart]",
                addToCartText: "[data-add-to-cart-text]",
                cartCount: "[data-cart-count]",
                cartCountBubble: "[data-cart-count-bubble]",
                cartPopup: "[data-cart-popup]",
                cartPopupCartQuantity: "[data-cart-popup-cart-quantity]",
                cartPopupClose: "[data-cart-popup-close]",
                cartPopupDismiss: "[data-cart-popup-dismiss]",
                cartPopupImage: "[data-cart-popup-image]",
                cartPopupImageWrapper: "[data-cart-popup-image-wrapper]",
                cartPopupImagePlaceholder: "[data-cart-popup-image-placeholder]",
                cartPopupProductDetails: "[data-cart-popup-product-details]",
                cartPopupQuantity: "[data-cart-popup-quantity]",
                cartPopupQuantityLabel: "[data-cart-popup-quantity-label]",
                cartPopupTitle: "[data-cart-popup-title]",
                cartPopupWrapper: "[data-cart-popup-wrapper]",
                loader: "[data-loader]",
                loaderStatus: "[data-loader-status]",
                quantity: "[data-quantity-input]",
                SKU: ".variant-sku",
                inventory: ".variant-inventory",
                productStatus: "[data-product-status]",
                originalSelectorId: "#ProductSelect-" + a,
                productForm: "[data-product-form]",
                errorMessage: "[data-error-message]",
                errorMessageWrapper: "[data-error-message-wrapper]",
                productImageWraps: ".product-single__photo",
                productMainImageWraps: ".product-single__photo.number__1",
                productThumbImages: ".product-single__thumbnail--" + a,
                productThumbs: ".product-single__thumbnails-" + a,
                productThumbListItem: ".product-single__thumbnails-item",
                productFeaturedImage: ".product-featured-img",
                productThumbsWrapper: ".thumbnails-wrapper",
                saleLabel: ".product-price__sale-label-" + a,
                singleOptionSelector: ".single-option-selector-" + a,
                shopifyPaymentButton: ".shopify-payment-button",
                priceContainer: "[data-price]",
                regularPrice: "[data-regular-price]",
                salePrice: "[data-sale-price]",
                unitPrice: "[data-unit-price]",
                totalPrice: "[data-total-price]",
                unitPriceBaseUnit: "[data-unit-price-base-unit]"
            },this.$quantityInput = $(this.selectors.quantity, e), this.$errorMessageWrapper = $(this.selectors.errorMessageWrapper, e), this.$addToCart = $(this.selectors.addToCart, e), this.$addToCartText = $(this.selectors.addToCartText, this.$addToCart), this.$loader = $(this.selectors.loader, this.$addToCart), this.$loaderStatus = $(this.selectors.loaderStatus, e), this.$shopifyPaymentButton = $(this.selectors.shopifyPaymentButton, e), $("#ProductJson-" + a).html() && (this.productSingleObject = JSON.parse(document.getElementById("ProductJson-" + a).innerHTML), this.settings.zoomEnabled = $(this.selectors.productImageWraps).hasClass("js-zoom-enabled"), this._initBreakpoints(), this._stringOverrides(), this._initVariants(), this._initImageSwitch(), this._initAddToCart(), this._initsetMainImage(), this._next_prev_button(), this._setNumberQuantity(), this._setProductCarousel(), this._initSoldOutProductShop(), this._setShowmore_description(), this._initCustomerViewProductShop(), this._initCountdown(), this._scrollToReview(), this._productVideo())
        }

        function e() {
            return window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency
        }

        function a(t) {
            return t < 10 ? "<span class='num'>0</span><span class='num'>" + t + "</span>" : "<span class='num'>" + parseInt(t / 10) + "</span><span class='num'>" + t % 10 + "</span>"
        }
        return t.prototype = _.assignIn({}, t.prototype, {
            _productVideo: function() {
                if ($("#video_product.halo_modal").length) {
                    var t = $("#video_product .popup-video").children("iframe").attr("src");
                    $("#video_product").on("click", function() {
                        0 === $(event.target).closest("#video_product .popup-video").length && $("#video_product .popup-video").children("iframe").attr("src", "")
                    }), $('.video-link[data-target="#video_product"]').on("click", function() {
                        $("#video_product .popup-video").children("iframe").attr("src", t)
                    })
                }
            },
            _stringOverrides: function() {
                theme.productStrings = theme.productStrings || {}, $.extend(theme.strings, theme.productStrings)
            },
            _initBreakpoints: function() {
                var t = this;
                enquire.register(this.settings.mediaQuerySmall, {
                    match: function() {
                        t.settings.zoomEnabled && $(t.selectors.productImageWraps).each(function() {
                            $(this).trigger("zoom.destroy")
                        }), t.settings.bpSmall = !0
                    },
                    unmatch: function() {
                        t.settings.bpSmall = !1
                    }
                }), enquire.register(this.settings.mediaQueryMediumUp, {
                    match: function() {
                        t.settings.zoomEnabled && $(t.selectors.productImageWraps).each(function() {
                            var t, e;
                            t = this, e = $(t).data("zoom"), $(t).zoom({
                                url: e
                            })
                        })
                    }
                })
            },
            _initVariants: function() {
                var t = {
                    $container: this.$container,
                    enableHistoryState: this.$container.data("enable-history-state") || !1,
                    singleOptionSelector: this.selectors.singleOptionSelector,
                    originalSelectorId: this.selectors.originalSelectorId,
                    product: this.productSingleObject
                };
                this.variants = new slate.Variants(t);
                var e = this.variants._getVariantFromOptions();
                if (null != e && null != e.featured_media) {
                    var a = e.featured_media.id;
                    this._switchImage(a), this._setActiveThumbnail(a)
                }
                this.$container.on("variantChange" + this.settings.namespace, this._updateAvailability.bind(this)), this.$container.on("variantImageChange" + this.settings.namespace, this._updateImages.bind(this)), this.$container.on("variantPriceChange" + this.settings.namespace, this._updatePrice.bind(this)), this.$container.on("variantSKUChange" + this.settings.namespace, this._updateSKU.bind(this))
            },
            _initsetMainImage: function() {
                if ($(".product-slider").hasClass("custom")) {
                    var t = $(this.selectors.productMainImageWraps, this.$container),
                        e = $(this.selectors.productImageWraps, this.$container);
                    $(".product-slider").hasClass("custom") && (e.addClass(this.classes.hidden), t.removeClass(this.classes.hidden))
                }
            },
            _initImageSwitch: function() {
                if ($(this.selectors.productThumbImages).length) {
                    var t = this;
                    $(this.selectors.productThumbImages).on("click", function(e) {
                        e.preventDefault();
                        var a = $(this).data("thumbnail-id");
                        t._switchImage(a), t._setActiveThumbnail(a)
                    }).on("keyup", t._handleImageFocus.bind(t))
                }
            },
            _initAddToCart: function() {
                $(this.selectors.productForm, this.$container).on("submit", function(t) {
                    t.preventDefault(), this.$previouslyFocusedElement = $(":focus");
                    var e = this.$quantityInput.val() <= 0;
                    if (!this.$addToCart.is("[aria-disabled]"))
                        if (e) this._showErrorMessage(theme.strings.quantityMinimumMessage);
                        else {
                            this._handleButtonLoadingState(!0);
                            var a = $(this.selectors.productForm, this.$container);
                            this._addItemToCart(a)
                        }
                }.bind(this))
            },
            _addItemToCart: function(t) {
                var e = {
                    url: "/cart/add.js",
                    data: $(t).serialize(),
                    dataType: "json"
                };
                $.post(e).done(function(t) {
                    this._hideErrorMessage(), this._setupCartPopup(t)
                }.bind(this)).fail(function(t) {
                    this.$previouslyFocusedElement.focus(), this._showErrorMessage(t.responseJSON.description), this._handleButtonLoadingState(!1)
                }.bind(this))
            },
            _handleButtonLoadingState: function(t) {
                t ? (this.$addToCart.attr("aria-disabled", !0), this.$addToCartText.addClass(this.classes.hidden), this.$loader.removeClass(this.classes.hidden), this.$shopifyPaymentButton.attr("disabled", !0), this.$loaderStatus.attr("aria-hidden", !1)) : (this.$addToCart.removeAttr("aria-disabled"), this.$addToCartText.removeClass(this.classes.hidden), this.$loader.addClass(this.classes.hidden), this.$shopifyPaymentButton.removeAttr("disabled"), this.$loaderStatus.attr("aria-hidden", !0))
            },
            _showErrorMessage: function(t) {
                $(this.selectors.errorMessage, this.$container).html(t), 0 !== this.$quantityInput.length && this.$quantityInput.addClass(this.classes.inputError), this.$errorMessageWrapper.removeClass(this.classes.productFormErrorMessageWrapperHidden).attr("aria-hidden", !0).removeAttr("aria-hidden")
            },
            _hideErrorMessage: function() {
                this.$errorMessageWrapper.addClass(this.classes.productFormErrorMessageWrapperHidden), 0 !== this.$quantityInput.length && this.$quantityInput.removeClass(this.classes.inputError)
            },
            _setupCartPopup: function(t) {
                this.$cartPopup = this.$cartPopup || $(this.selectors.cartPopup), this.$cartPopupWrapper = this.$cartPopupWrapper || $(this.selectors.cartPopupWrapper), this.$cartPopupTitle = this.$cartPopupTitle || $(this.selectors.cartPopupTitle), this.$cartPopupQuantity = this.$cartPopupQuantity || $(this.selectors.cartPopupQuantity), this.$cartPopupQuantityLabel = this.$cartPopupQuantityLabel || $(this.selectors.cartPopupQuantityLabel), this.$cartPopupClose = this.$cartPopupClose || $(this.selectors.cartPopupClose), this.$cartPopupDismiss = this.cartPopupDismiss || $(this.selectors.cartPopupDismiss), this._setupCartPopupEventListeners(), this._updateCartPopupContent(t)
            },
            _updateCartPopupContent: function(t) {
                var e = this.$quantityInput.length ? this.$quantityInput.val() : 1;
                this.$cartPopupTitle.text(t.product_title), this.$cartPopupQuantity.text(e), this.$cartPopupQuantityLabel.text(theme.strings.quantityLabel.replace("[count]", e)), this._setCartPopupImage(t.image, t.title), this._setCartPopupProductDetails(t.variant_options, t.properties), $.getJSON("/cart.js").then(function(t) {
                    this._setCartQuantity(t.item_count), this._setCartCountBubble(t.item_count), this._showCartPopup()
                }.bind(this))
            },
            _setupCartPopupEventListeners: function() {
                this.$cartPopupWrapper.on("keyup", function(t) {
                    t.keyCode === slate.utils.keyboardKeys.ESCAPE && this._hideCartPopup(t)
                }.bind(this)), this.$cartPopupClose.on("click", this._hideCartPopup.bind(this)), this.$cartPopupDismiss.on("click", this._hideCartPopup.bind(this)), $("body").on("click", this._onBodyClick.bind(this)), setTimeout(function() {
                    this._hideCartPopup(!0)
                }, 3e3)
            },
            _setCartPopupImage: function(t, e) {
                if (this.$cartPopupImageWrapper = this.$cartPopupImageWrapper || $(this.selectors.cartPopupImageWrapper), this.$cartPopupImagePlaceholder = this.$cartPopupImagePlaceholder || $(this.selectors.cartPopupImagePlaceholder), null !== t) {
                    this.$cartPopupImageWrapper.removeClass(this.classes.hidden);
                    var a = theme.Images.getSizedImageUrl(t, "200x"),
                        i = document.createElement("img");
                    i.src = a, i.alt = e, i.dataset.cartPopupImage = "", i.onload = function() {
                        this.$cartPopupImagePlaceholder.addClass(this.classes.hidden), this.$cartPopupImageWrapper.append(i)
                    }.bind(this)
                } else this.$cartPopupImageWrapper.addClass(this.classes.hidden)
            },
            _setCartPopupProductDetails: function(t, e) {
                this.$cartPopupProductDetails = this.$cartPopupProductDetails || $(this.selectors.cartPopupProductDetails);
                var a = "";
                "Default Title" !== t[0] && (a += this._getVariantOptionList(t)), null !== e && 0 !== Object.keys(e).length && (a += this._getPropertyList(e)), 0 === a.length ? (this.$cartPopupProductDetails.html(""), this.$cartPopupProductDetails.attr("hidden", "")) : (this.$cartPopupProductDetails.html(a), this.$cartPopupProductDetails.removeAttr("hidden"))
            },
            _getVariantOptionList: function(t) {
                var e = "";
                return t.forEach(function(t) {
                    e = e + '<li class="product-details__item product-details__item--variant-option">' + t + "</li>"
                }), e
            },
            _getPropertyList: function(t) {
                var e = "";
                return Object.entries(t).forEach(function(t) {
                    "_" !== t[0].charAt(0) && 0 !== t[1].length && (e = e + '<li class="product-details__item product-details__item--property"><span class="product-details__property-label">' + t[0] + ": </span>" + t[1])
                }), e
            },
            _setCartQuantity: function(t) {
                var e;
                this.$cartPopupCartQuantity = this.$cartPopupCartQuantity || $(this.selectors.cartPopupCartQuantity), 1 === t ? e = theme.strings.oneCartCount : t > 1 && (e = theme.strings.otherCartCount.replace("[count]", t)), this.$cartPopupCartQuantity.text(t).attr("aria-label", e)
            },
            _setNumberQuantity: function() {
                $("[data-qtt]");
                $(document).on("click", "[data-qtt]", function(t) {
                    t.preventDefault(), t.stopPropagation();
                    var a = $(this),
                        i = $("[data-quantity-input]"),
                        r = parseInt(i.val()),
                        o = 1;
                    switch (!0) {
                        case a.hasClass("plus"):
                            o = r + 1;
                            break;
                        case a.hasClass("minus") && r > 1:
                            o = r - 1
                    }
                    i.val(o).trigger("change");
                    var n = $("[data-total-price]"),
                        s = $("[data-total-price]").attr("data-price-value");
                    n.html(theme.Currency.formatMoney(s * o, theme.moneyFormat)), e() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
                })
            },
            _setCartCountBubble: function(t) {
                this.$cartCountBubble = this.$cartCountBubble || $(this.selectors.cartCountBubble), this.$cartCount = this.$cartCount || $(this.selectors.cartCount), this.$cartCountBubble.removeClass(this.classes.hidden), this.$cartCount.text(t)
            },
            _showCartPopup: function() {
                this.$cartPopupWrapper.prepareTransition().removeClass(this.classes.cartPopupWrapperHidden), this._handleButtonLoadingState(!1), slate.a11y.trapFocus({
                    $container: this.$cartPopupWrapper,
                    $elementToFocus: this.$cartPopup,
                    namespace: "cartPopupFocus"
                })
            },
            _hideCartPopup: function(t) {
                var e = 0 === t.detail;
                this.$cartPopupWrapper.prepareTransition().addClass(this.classes.cartPopupWrapperHidden), $(this.selectors.cartPopupImage).remove(), this.$cartPopupImagePlaceholder.removeClass(this.classes.hidden), slate.a11y.removeTrapFocus({
                    $container: this.$cartPopupWrapper,
                    namespace: "cartPopupFocus"
                }), e && this.$previouslyFocusedElement[0].focus(), this.$cartPopupWrapper.off("keyup"), this.$cartPopupClose.off("click"), this.$cartPopupDismiss.off("click"), $("body").off("click")
            },
            _onBodyClick: function(t) {
                var e = $(t.target);
                e[0] === this.$cartPopupWrapper[0] || e.parents(this.selectors.cartPopup).length || this._hideCartPopup(t)
            },
            _setActiveThumbnail: function(t) {
                void 0 === t && (t = $(this.selectors.productImageWraps + ":not(.hide)", this.$container).data("image-id"));
                var e = $(this.selectors.productThumbListItem + ":not(.slick-cloned)", this.$container),
                    a = e.find(this.selectors.productThumbImages + "[data-thumbnail-id='" + t + "']");
                $(this.selectors.productThumbImages).removeClass(this.classes.activeClass).removeAttr("aria-current"), a.addClass(this.classes.activeClass), a.attr("aria-current", !0);
                var i = $(this.selectors.productThumbs, this.$container);
                setTimeout(function() {
                    if (e.hasClass("slick-slide")) {
                        var t = a.parent().data("slick-index");
                        i.slick("slickGoTo", t)
                    }
                }, 300)
            },
            _next_prev_button: function() {
                if (!$(".product-slider").hasClass("custom")) {
                    var t = $(this.selectors.productThumbs).find(".slick-arrow"),
                        e = $(this.selectors.productThumbImages);
                    $(document).on("click", t, function() {
                        var t = $(".product-single__thumbnails").find(".slick-current");
                        e.removeClass("active-thumb").removeAttr("aria-current"), t.children().addClass("active-thumb"), t.children().attr("aria-current", !0)
                    })
                }
            },
            _switchImage: function(t) {
                var e = $(this.selectors.productImageWraps + "[data-image-id='" + t + "']", this.$container),
                    a = $(this.selectors.productImageWraps + ":not([data-image-id='" + t + "'])", this.$container);
                $(".product-slider").hasClass("custom") && (e.removeClass(this.classes.hidden), a.addClass(this.classes.hidden))
            },
            _handleImageFocus: function(t) {
                t.keyCode === slate.utils.keyboardKeys.ENTER && $(this.selectors.productFeaturedImage + ":visible").focus()
            },
            _liveRegionText: function(t) {
                var e = "[Availability] [Regular] [$$] [Sale] [$]. [UnitPrice] [$$$]";
                if (!t) return e = theme.strings.unavailable;
                var a = t.available ? "" : theme.strings.soldOut + ",";
                e = e.replace("[Availability]", a);
                var i = "",
                    r = theme.Currency.formatMoney(t.price, theme.moneyFormat),
                    o = "",
                    n = "",
                    s = "",
                    c = "";
                return t.compare_at_price > t.price && (i = theme.strings.regularPrice, r = theme.Currency.formatMoney(t.compare_at_price, theme.moneyFormat) + ",", o = theme.strings.sale, n = theme.Currency.formatMoney(t.price, theme.moneyFormat)), t.unit_price && (s = theme.strings.unitPrice, c = theme.Currency.formatMoney(t.unit_price, theme.moneyFormat) + " " + theme.strings.unitPriceSeparator + " " + this._getBaseUnit(t)), e = e.replace("[Regular]", i).replace("[$$]", r).replace("[Sale]", o).replace("[$]", n).replace("[UnitPrice]", s).replace("[$$$]", c).trim()
            },
            _updateLiveRegion: function(t) {
                var e = t.variant,
                    a = this.container.querySelector(this.selectors.productStatus);
                a.textContent = this._liveRegionText(e), a.setAttribute("aria-hidden", !1), setTimeout(function() {
                    a.setAttribute("aria-hidden", !0)
                }, 1e3)
            },
            _updateAddToCart: function(t) {
                var e = t.variant;
                e ? e.available ? (this.$addToCart.removeAttr("aria-disabled").attr("aria-label", theme.strings.addToCart), $(this.selectors.addToCartText, this.$container).text(theme.strings.addToCart), this.$shopifyPaymentButton.show()) : (this.$addToCart.attr("aria-disabled", !0).attr("aria-label", theme.strings.soldOut), $(this.selectors.addToCartText, this.$container).text(theme.strings.soldOut), this.$shopifyPaymentButton.hide()) : (this.$addToCart.attr("aria-disabled", !0).attr("aria-label", theme.strings.unavailable), $(this.selectors.addToCartText, this.$container).text(theme.strings.unavailable), this.$shopifyPaymentButton.hide())
            },
            _updateAvailability: function(t) {
                this._hideErrorMessage(), this._updateAddToCart(t), this._updateLiveRegion(t), this._updatePrice(t)
            },
            _updateImages: function(t) {
                var e = t.variant.featured_media.id;
                this._switchImage(e), this._setActiveThumbnail(e)
            },
            _updatePrice: function(t) {
                var a = t.variant,
                    i = $(this.selectors.priceContainer, this.$container),
                    r = $(this.selectors.regularPrice, i),
                    o = $(this.selectors.salePrice, i),
                    n = ($(this.selectors.unitPrice, i), $(this.selectors.totalPrice, i), $(this.selectors.inventory, this.$container));
                $(this.selectors.unitPriceBaseUnit, i);
                if (i.removeClass(this.classes.productUnavailable).removeClass(this.classes.productOnSale).removeClass(this.classes.productUnitAvailable).removeAttr("aria-hidden"), !a) return i.addClass(this.classes.productUnavailable).attr("aria-hidden", !0), i.find(".price-item--sale").addClass(this.classes.productUnavailable), void n.removeClass("variant-inventory--true");
                1 == a.available ? n.addClass("variant-inventory--true") : n.removeClass("variant-inventory--true");
                var s = parseInt($("[data-quantity-input]").val());
                a.compare_at_price > a.price ? (r.html(theme.Currency.formatMoney(a.compare_at_price, theme.moneyFormat)), o.html(theme.Currency.formatMoney(a.price, theme.moneyFormat)), $("[data-total-price]").attr("data-price-value", a.price), $("[data-total-price]").html(theme.Currency.formatMoney(a.price * s, theme.moneyFormat)), i.addClass(this.classes.productOnSale)) : (r.html(theme.Currency.formatMoney(a.price, theme.moneyFormat)), o.html(""), $("[data-total-price]").attr("data-price-value", a.price), $("[data-total-price]").html(theme.Currency.formatMoney(a.price * s, theme.moneyFormat))), e() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
            },
            _getBaseUnit: function(t) {
                return 1 === t.unit_price_measurement.reference_value ? t.unit_price_measurement.reference_unit : t.unit_price_measurement.reference_value + t.unit_price_measurement.reference_unit
            },
            _updateSKU: function(t) {
                var e = t.variant;
                $(this.selectors.SKU).html(e.sku)
            },
            _setProductCarousel: function() {
                $(".product-slider").length && $(".product-slider").each(function(t) {
                    if ($(this).hasClass("custom")) {
                        if ($(window).width() < 1025) {
                            var e = $(this).find(".slider-nav"),
                                a = $(this).find(".slider-for"),
                                i = e.data("rows");
                            a.length && (a.slick({
                                fade: !0,
                                dots: !0,
                                arrows: !1,
                                slidesToShow: 1,
                                slidesToScroll: 1,
                                asNavFor: e,
                                adaptiveHeight: !0
                            }), e.slick({
                                rows: 0,
                                arrows: !1,
                                infinite: !0,
                                slidesToShow: 4,
                                slidesToScroll: 1,
                                focusOnSelect: !0,
                                asNavFor: a,
                                responsive: [{
                                    breakpoint: 550,
                                    settings: {
                                        slidesToShow: 3,
                                        slidesToScroll: 1
                                    }
                                }]
                            }))
                        }
                    } else {
                        e = $(this).find(".slider-nav"), a = $(this).find(".slider-for"), i = e.data("rows");
                        a.length && (a.slick({
                            fade: !0,
                            arrows: !1,
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            asNavFor: e,
                            adaptiveHeight: !0
                        }), e.slick({
                            infinite: !0,
                            slidesToShow: i,
                            slidesToScroll: 1,
                            arrows: !0,
                            rows: 0,
                            focusOnSelect: !0,
                            asNavFor: a,
                            prevArrow: '<div class="slick-prev slick-arrow"><svg id="arrow-left" x="0px" y="0px" viewBox="0 0 370.814 370.814" xml:space="preserve"><g><g><polygon points="292.92,24.848 268.781,0 77.895,185.401 268.781,370.814 292.92,345.961 127.638,185.401"/></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>',
                            nextArrow: '<div class="slick-next slick-arrow"><svg id="arrow-right" x="0px" y="0px" viewBox="0 0 478.448 478.448" xml:space="preserve"><g><g><polygon points="131.659,0 100.494,32.035 313.804,239.232 100.494,446.373 131.65,478.448 377.954,239.232"/></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>',
                            responsive: [{
                                breakpoint: 992,
                                settings: {
                                    slidesToShow: 4,
                                    slidesToScroll: 1
                                }
                            }, {
                                breakpoint: 550,
                                settings: {
                                    slidesToShow: 3,
                                    slidesToScroll: 1
                                }
                            }]
                        }))
                    }
                })
            },
            _initSoldOutProductShop: function() {
                var t = $("[data-soldOut-product]");
                t.length && t.each(function() {
                    var t = $(this),
                        e = t.data("items").toString().split(","),
                        a = t.data("hours").toString().split(","),
                        i = Math.floor(Math.random() * e.length),
                        r = Math.floor(Math.random() * a.length);
                    t.find(".items-count").text(e[i]), t.find(".hours-num").text(a[r])
                })
            },
            _initCustomerViewProductShop: function() {
                var t = $("[data-customer-view]");
                t.length && t.each(function() {
                    var t = $(this);
                    setInterval(function() {
                        var e = t.data("customer-view").split(","),
                            a = Math.floor(Math.random() * e.length);
                        t.find("label").text(e[a])
                    }, 5e3)
                })
            },
            _setShowmore_description: function() {
                if ($(".description_showmore").length && $(window).width() <= 767) {
                    var t = $(".showmore"),
                        e = $(".showless"),
                        a = $(".description_showmore").parent();
                    a.css("max-height", 370), t.on("click", function() {
                        a.css("max-height", "none"), t.removeClass("show").addClass("hide"), e.removeClass("hide").addClass("show")
                    }), e.on("click", function() {
                        a.css("max-height", 370), e.removeClass("show").addClass("hide"), t.removeClass("hide").addClass("show")
                    })
                }
            },
            _initCountdown: function() {
                $(".product-countdown[data-countdown]").each(function() {
                    if (!$(this).hasClass("has-value")) var t = $(this),
                        e = new Date(t.attr("data-countdown-value")).getTime(),
                        i = setInterval(function() {
                            var r = (new Date).getTime(),
                                o = e - r;
                            if (o < 0) clearInterval(i), document.getElementById("product-countdown").innerHTML = "";
                            else {
                                var n = Math.floor(o / 864e5),
                                    s = Math.floor(o % 864e5 / 36e5),
                                    c = Math.floor(o % 36e5 / 6e4),
                                    l = Math.floor(o % 6e4 / 1e3),
                                    d = "<span class='block-time'>" + function t(e) {
                                        if (e < 10) return "<span class='num'>0</span><span class='num'>" + e + "</span>";
                                        if (e > 100) return t(parseInt(e / 10)) + "<span class='num'>" + e % 10 + "</span>";
                                        return "<span class='num'>" + parseInt(e / 10) + "</span><span class='num'>" + e % 10 + "</span>"
                                    }(n) + "<span class='block-label'>days</span></span><span class='block-time'>" + a(s) + "<span class='block-label'>hours</span></span><span class='block-time'>" + a(c) + "<span class='block-label'>mins</span></span><span class='block-time'>" + a(l) + "<span class='block-label'>secs</span></span>";
                                t.html(d), t.addClass("has-value")
                            }
                        }, 1e3)
                })
            },
            _scrollToReview: function() {
                $(document).on("click", ".product_template .product_shop .spr-badge", function(t) {
                    if (t.preventDefault(), $(".product_layout_1").length) var e = $(".product-review__inner").offset();
                    else if ($(".product_layout_2").length) {
                        if ($(".toggle_reviews").length) {
                            e = $(".tab-vertical").offset();
                            $(".tab-vertical .toggle-content.show").prev().find(".toggleLink").trigger("click"), $(".toggle_reviews .toggleLink").trigger("click")
                        }
                    } else if ($(".tab-pane-review").length) {
                        e = $(".productView-description").offset();
                        $(window).width() > 767 ? ($(".tab_review .tab-title").trigger("click"), e.top = e.top - 70) : ($(".tab-content .toggle-content.show").prev().find(".toggleLink").trigger("click"), $(".tab-pane-review .toggleLink").trigger("click"))
                    }
                    $("body,html").animate({
                        scrollTop: e.top - 70
                    }, 1e3)
                })
            },
            onUnload: function() {
                this.$container.off(this.settings.namespace)
            }
        }), t
    }(), theme.product_quickview = function() {
        function t() {
            var t, a, p = $(".product_quickview"),
                u = p.attr("data-section-id");
            if (this.settings = {
                    mediaQueryMediumUp: "screen and (min-width: 1025px)",
                    mediaQuerySmall: "screen and (max-width: 1024px)",
                    bpSmall: !1,
                    enableHistoryState: p.data("enable-history-state") || !1,
                    namespace: ".slideshow-" + u,
                    sectionId: u,
                    sliderActive: !1,
                    zoomEnabled: !1
                }, this.selectors = {
                    addToCart: "[data-add-to-cart]",
                    addToCartText: "[data-add-to-cart-text]",
                    cartCount: "[data-cart-count]",
                    cartCountBubble: "[data-cart-count-bubble]",
                    cartPopup: "[data-cart-popup]",
                    cartPopupCartQuantity: "[data-cart-popup-cart-quantity]",
                    cartPopupClose: "[data-cart-popup-close]",
                    cartPopupDismiss: "[data-cart-popup-dismiss]",
                    cartPopupImage: "[data-cart-popup-image]",
                    cartPopupImageWrapper: "[data-cart-popup-image-wrapper]",
                    cartPopupImagePlaceholder: "[data-cart-popup-image-placeholder]",
                    cartPopupProductDetails: "[data-cart-popup-product-details]",
                    cartPopupQuantity: "[data-cart-popup-quantity]",
                    cartPopupQuantityLabel: "[data-cart-popup-quantity-label]",
                    cartPopupTitle: "[data-cart-popup-title]",
                    cartPopupWrapper: "[data-cart-popup-wrapper]",
                    loader: "[data-loader]",
                    loaderStatus: "[data-loader-status]",
                    quantity: "[data-quantity-input]",
                    SKU: ".variant-sku",
                    inventory: ".variant-inventory",
                    productStatus: "[data-product-status]",
                    originalSelectorId: "#ProductSelect-" + u,
                    productForm: "[data-product-form]",
                    errorMessage: "[data-error-message]",
                    errorMessageWrapper: "[data-error-message-wrapper]",
                    productImageWraps: ".product-single__photo",
                    productMainImageWraps: ".product-single__photo.number__1",
                    productThumbImages: ".product-single__thumbnail--" + u,
                    productThumbs: ".product-single__thumbnails-" + u,
                    productThumbListItem: ".product-single__thumbnails-item",
                    productFeaturedImage: ".product-featured-img",
                    productThumbsWrapper: ".thumbnails-wrapper",
                    saleLabel: ".product-price__sale-label-" + u,
                    singleOptionSelector: ".single-option-selector-" + u,
                    shopifyPaymentButton: ".shopify-payment-button",
                    priceContainer: "[data-price-qv]",
                    regularPrice: "[data-regular-price-qv]",
                    salePrice: "[data-sale-price-qv]",
                    unitPrice: "[data-unit-price]",
                    unitPriceBaseUnit: "[data-unit-price-base-unit]"
                }, this.classes = {
                    cartPopupWrapperHidden: "cart-popup-wrapper--hidden",
                    hidden: "hide",
                    inputError: "input--error",
                    productOnSale: "price--on-sale",
                    productUnitAvailable: "price--unit-available",
                    productUnavailable: "price--unavailable",
                    productFormErrorMessageWrapperHidden: "product-form__error-message-wrapper--hidden",
                    activeClass: "active-thumb"
                }, this.$quantityInput = $(this.selectors.quantity, p), this.$errorMessageWrapper = $(this.selectors.errorMessageWrapper, p), this.$addToCart = $(this.selectors.addToCart, p), this.$addToCartText = $(this.selectors.addToCartText, this.$addToCart), this.$loader = $(this.selectors.loader, this.$addToCart), this.$loaderStatus = $(this.selectors.loaderStatus, p), this.$shopifyPaymentButton = $(this.selectors.shopifyPaymentButton, p), $("#ProductJson-" + u).html()) return this.productSingleObject = JSON.parse(document.getElementById("ProductJson-" + u).innerHTML), this.settings.zoomEnabled = $(this.selectors.productImageWraps).hasClass("js-zoom-enabled"),
                function() {
                    var t = this;
                    enquire.register(this.settings.mediaQuerySmall, {
                        match: function() {
                            t.settings.zoomEnabled && $(t.selectors.productImageWraps).each(function() {
                                $(this).trigger("zoom.destroy")
                            }), t.settings.bpSmall = !0
                        },
                        unmatch: function() {
                            t.settings.bpSmall = !1
                        }
                    }), enquire.register(this.settings.mediaQueryMediumUp, {
                        match: function() {
                            t.settings.zoomEnabled && $(t.selectors.productImageWraps).each(function() {
                                var t, e;
                                t = this, e = $(t).data("zoom"), $(t).zoom({
                                    url: e
                                })
                            })
                        }
                    })
                }(), theme.productStrings = theme.productStrings || {}, $.extend(theme.strings, theme.productStrings),
                function() {
                    var t = {
                        $container: $(".product_quickview"),
                        enableHistoryState: $(".product_quickview").data("enable-history-state") || !1,
                        singleOptionSelector: this.selectors.singleOptionSelector,
                        originalSelectorId: this.selectors.originalSelectorId,
                        product: this.productSingleObject
                    };
                    this.variants = new slate.Variants2(t), $(".product_quickview").on("variantChange" + this.settings.namespace, function(t) {
                        o(),
                            function(t) {
                                var e = t.variant;
                                e ? e.available ? (this.$addToCart.removeAttr("aria-disabled").attr("aria-label", theme.strings.addToCart), $(this.selectors.addToCartText, this.$container).text(theme.strings.addToCart), this.$shopifyPaymentButton.show()) : (this.$addToCart.attr("aria-disabled", !0).attr("aria-label", theme.strings.soldOut), $(this.selectors.addToCartText, this.$container).text(theme.strings.soldOut), this.$shopifyPaymentButton.hide()) : (this.$addToCart.attr("aria-disabled", !0).attr("aria-label", theme.strings.unavailable), $(this.selectors.addToCartText, this.$container).text(theme.strings.unavailable), this.$shopifyPaymentButton.hide())
                            }(t), l(t)
                    }.bind(this)), $(".product_quickview").on("variantImageChange" + this.settings.namespace, function(t) {
                        var e = t.variant.featured_media.id;
                        c(e), s(e)
                    }.bind(this)), $(".product_quickview").on("variantPriceChange" + this.settings.namespace, l.bind(this)), $(".product_quickview").on("variantSKUChange" + this.settings.namespace, function(t) {
                        var e = t.variant;
                        $(this.selectors.SKU).html(e.sku)
                    }.bind(this))
                }(),
                function() {
                    if (!$(this.selectors.productThumbImages).length) return;
                    $(this.selectors.productThumbImages).on("click", function(t) {
                        t.preventDefault();
                        var e = $(this),
                            a = e.data("thumbnail-id");
                        c(a), s(a)
                    }).on("keyup", function(t) {
                        if (t.keyCode !== slate.utils.keyboardKeys.ENTER) return;
                        $(this.selectors.productFeaturedImage + ":visible").focus()
                    }.bind(this))
                }(),
                function() {
                    $(this.selectors.productForm, this.$container).on("submit", function(t) {
                        t.preventDefault(), this.$previouslyFocusedElement = $(":focus");
                        var e = this.$quantityInput.val() <= 0;
                        if (!this.$addToCart.is("[aria-disabled]"))
                            if (e) this._showErrorMessage(theme.strings.quantityMinimumMessage);
                            else {
                                r(!0);
                                var a = $(this.selectors.productForm, this.$container);
                                ! function(t) {
                                    var e = {
                                        url: "/cart/add.js",
                                        data: $(t).serialize(),
                                        dataType: "json"
                                    };
                                    $.post(e).done(function(t) {
                                        o(),
                                            function(t) {
                                                this.$cartPopup = this.$cartPopup || $(this.selectors.cartPopup), this.$cartPopupWrapper = this.$cartPopupWrapper || $(this.selectors.cartPopupWrapper), this.$cartPopupTitle = this.$cartPopupTitle || $(this.selectors.cartPopupTitle), this.$cartPopupQuantity = this.$cartPopupQuantity || $(this.selectors.cartPopupQuantity), this.$cartPopupQuantityLabel = this.$cartPopupQuantityLabel || $(this.selectors.cartPopupQuantityLabel), this.$cartPopupClose = this.$cartPopupClose || $(this.selectors.cartPopupClose), this.$cartPopupDismiss = this.cartPopupDismiss || $(this.selectors.cartPopupDismiss),
                                                    function() {
                                                        this.$cartPopupWrapper.on("keyup", function(t) {
                                                            t.keyCode === slate.utils.keyboardKeys.ESCAPE && n(t)
                                                        }.bind(this)), this.$cartPopupClose.on("click", n.bind(this)), this.$cartPopupDismiss.on("click", n.bind(this)), $("body").on("click", function(t) {
                                                            var e = $(t.target);
                                                            e[0] === this.$cartPopupWrapper[0] || e.parents(this.selectors.cartPopup).length || n(t)
                                                        }.bind(this))
                                                    }(),
                                                    function(t) {
                                                        var e = this.$quantityInput.length ? this.$quantityInput.val() : 1;
                                                        this.$cartPopupTitle.text(t.product_title), this.$cartPopupQuantity.text(e), this.$cartPopupQuantityLabel.text(theme.strings.quantityLabel.replace("[count]", e)),
                                                            function(t, e) {
                                                                if (this.$cartPopupImageWrapper = this.$cartPopupImageWrapper || $(this.selectors.cartPopupImageWrapper), this.$cartPopupImagePlaceholder = this.$cartPopupImagePlaceholder || $(this.selectors.cartPopupImagePlaceholder), null === t) return void this.$cartPopupImageWrapper.addClass(this.classes.hidden);
                                                                this.$cartPopupImageWrapper.removeClass(this.classes.hidden);
                                                                var a = theme.Images.getSizedImageUrl(t, "200x"),
                                                                    i = document.createElement("img");
                                                                i.src = a, i.alt = e, i.dataset.cartPopupImage = "", i.onload = function() {
                                                                    this.$cartPopupImagePlaceholder.addClass(this.classes.hidden), this.$cartPopupImageWrapper.append(i)
                                                                }.bind(this)
                                                            }(t.image, t.title),
                                                            function(t, e) {
                                                                this.$cartPopupProductDetails = this.$cartPopupProductDetails || $(this.selectors.cartPopupProductDetails);
                                                                var a = "";
                                                                "Default Title" !== t[0] && (a += function(t) {
                                                                    var e = "";
                                                                    return t.forEach(function(t) {
                                                                        e = e + '<li class="product-details__item product-details__item--variant-option">' + t + "</li>"
                                                                    }), e
                                                                }(t));
                                                                null !== e && 0 !== Object.keys(e).length && (a += function(t) {
                                                                    var e = "";
                                                                    return Object.entries(t).forEach(function(t) {
                                                                        "_" !== t[0].charAt(0) && 0 !== t[1].length && (e = e + '<li class="product-details__item product-details__item--property"><span class="product-details__property-label">' + t[0] + ": </span>" + t[1])
                                                                    }), e
                                                                }(e));
                                                                0 === a.length ? (this.$cartPopupProductDetails.html(""), this.$cartPopupProductDetails.attr("hidden", "")) : (this.$cartPopupProductDetails.html(a), this.$cartPopupProductDetails.removeAttr("hidden"))
                                                            }(t.variant_options, t.properties), $.getJSON("/cart.js").then(function(t) {
                                                                ! function(t) {
                                                                    var e;
                                                                    this.$cartPopupCartQuantity = this.$cartPopupCartQuantity || $(this.selectors.cartPopupCartQuantity), 1 === t ? e = theme.strings.oneCartCount : t > 1 && (e = theme.strings.otherCartCount.replace("[count]", t));
                                                                    this.$cartPopupCartQuantity.text(t).attr("aria-label", e)
                                                                }(t.item_count),
                                                                function(t) {
                                                                    this.$cartCountBubble = this.$cartCountBubble || $(this.selectors.cartCountBubble), this.$cartCount = this.$cartCount || $(this.selectors.cartCount), this.$cartCountBubble.removeClass(this.classes.hidden), this.$cartCount.text(t)
                                                                }(t.item_count),
                                                                function() {
                                                                    this.$cartPopupWrapper.prepareTransition().removeClass(this.classes.cartPopupWrapperHidden), r(!1), slate.a11y.trapFocus({
                                                                        $container: this.$cartPopupWrapper,
                                                                        $elementToFocus: this.$cartPopup,
                                                                        namespace: "cartPopupFocus"
                                                                    })
                                                                }()
                                                            }.bind(this))
                                                    }(t)
                                            }(t), i()
                                    }.bind(this)).fail(function(t) {
                                        this.$previouslyFocusedElement.focus(),
                                            function(t) {
                                                $(this.selectors.errorMessage, this.$container).html(t), 0 !== this.$quantityInput.length && this.$quantityInput.addClass(this.classes.inputError);
                                                this.$errorMessageWrapper.removeClass(this.classes.productFormErrorMessageWrapperHidden).attr("aria-hidden", !0).removeAttr("aria-hidden")
                                            }(t.responseJSON.description), r(!1)
                                    }.bind(this))
                                }(a)
                            }
                    }.bind(this))
                }(), s(),
                function() {
                    if ($(".product-slider").hasClass("custom")) return;
                    var t = $(this.selectors.productThumbs).find(".slick-arrow"),
                        e = $(this.selectors.productThumbImages);
                    $(document).on("click", t, function() {
                        var t = $(".product-single__thumbnails").find(".slick-current");
                        e.removeClass("active-thumb").removeAttr("aria-current"), t.children().addClass("active-thumb"), t.children().attr("aria-current", !0)
                    })
                }(),
                function() {
                    var t = "#product_quickview [data-qtt]",
                        a = ($(t), $("#product_quickview [data-quantity-input]")),
                        i = 1,
                        r = 1;
                    e() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format");
                    $(document).on("click", t, function(t) {
                        t.preventDefault(), t.stopPropagation();
                        var o = $(this);
                        switch (!0) {
                            case o.hasClass("plus"):
                                r = i + 1;
                                break;
                            case o.hasClass("minus") && i > 1:
                                r = i - 1
                        }
                        i = r, a.val(r).trigger("change");
                        var n = $("[data-total-price-qv]"),
                            s = $("[data-total-price-qv]").attr("data-price-value");
                        n.html(theme.Currency.formatMoney(s * r, theme.moneyFormat)), e() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
                    })
                }(),
                function() {
                    if (!$(".product_quickview .product-slider").length) return;
                    $(".product_quickview .product-slider").each(function(t) {
                        if ($(this).hasClass("custom")) {
                            if ($(window).width() < 1025) {
                                var e = $(this).find(".slider-nav"),
                                    a = $(this).find(".slider-for"),
                                    i = e.data("rows");
                                a.length && (a.slick({
                                    fade: !0,
                                    dots: !0,
                                    arrows: !1,
                                    slidesToShow: 1,
                                    slidesToScroll: 1,
                                    asNavFor: e,
                                    adaptiveHeight: !0
                                }), e.slick({
                                    rows: 0,
                                    arrows: !1,
                                    infinite: !0,
                                    slidesToShow: 4,
                                    slidesToScroll: 1,
                                    focusOnSelect: !0,
                                    asNavFor: a,
                                    responsive: [{
                                        breakpoint: 550,
                                        settings: {
                                            slidesToShow: 3,
                                            slidesToScroll: 1
                                        }
                                    }]
                                }))
                            }
                        } else {
                            var e = $(this).find(".slider-nav"),
                                a = $(this).find(".slider-for"),
                                i = e.data("rows");
                            a.length && (a.slick({
                                fade: !0,
                                arrows: !1,
                                slidesToShow: 1,
                                slidesToScroll: 1,
                                asNavFor: e,
                                adaptiveHeight: !0
                            }), e.slick({
                                infinite: !0,
                                slidesToShow: i,
                                slidesToScroll: 1,
                                arrows: !0,
                                rows: 0,
                                focusOnSelect: !0,
                                asNavFor: a,
                                prevArrow: '<div class="slick-prev slick-arrow"><svg id="arrow-left" x="0px" y="0px" viewBox="0 0 370.814 370.814" xml:space="preserve"><g><g><polygon points="292.92,24.848 268.781,0 77.895,185.401 268.781,370.814 292.92,345.961 127.638,185.401"/></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>',
                                nextArrow: '<div class="slick-next slick-arrow"><svg id="arrow-right" x="0px" y="0px" viewBox="0 0 478.448 478.448" xml:space="preserve"><g><g><polygon points="131.659,0 100.494,32.035 313.804,239.232 100.494,446.373 131.65,478.448 377.954,239.232"/></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>',
                                responsive: [{
                                    breakpoint: 992,
                                    settings: {
                                        slidesToShow: 4,
                                        slidesToScroll: 1
                                    }
                                }, {
                                    breakpoint: 550,
                                    settings: {
                                        slidesToShow: 3,
                                        slidesToScroll: 1
                                    }
                                }]
                            }))
                        }
                    })
                }(), $(".product-countdown[data-countdown]").each(function() {
                    if (!$(this).hasClass("has-value")) var t = $(this),
                        e = new Date(t.attr("data-countdown-value")).getTime(),
                        a = setInterval(function() {
                            var i = (new Date).getTime(),
                                r = e - i;
                            if (r < 0) clearInterval(a), document.getElementById("product-countdown").innerHTML = "";
                            else {
                                var o = Math.floor(r / 864e5),
                                    n = Math.floor(r % 864e5 / 36e5),
                                    s = Math.floor(r % 36e5 / 6e4),
                                    c = Math.floor(r % 6e4 / 1e3),
                                    l = "<span class='block-time'>" + function t(e) {
                                        return e < 10 ? "<span class='num'>0</span><span class='num'>" + e + "</span>" : e > 100 ? t(parseInt(e / 10)) + "<span class='num'>" + e % 10 + "</span>" : "<span class='num'>" + parseInt(e / 10) + "</span><span class='num'>" + e % 10 + "</span>"
                                    }(o) + "<span class='block-label'>days</span></span><span class='block-time'>" + d(n) + "<span class='block-label'>hours</span></span><span class='block-time'>" + d(s) + "<span class='block-label'>mins</span></span><span class='block-time'>" + d(c) + "<span class='block-label'>secs</span></span>";
                                t.html(l), t.addClass("has-value")
                            }
                        }, 1e3)
                }), (t = $("[data-soldOut-product]")).length && t.each(function() {
                    var t = $(this),
                        e = t.data("items").toString().split(","),
                        a = t.data("hours").toString().split(","),
                        i = Math.floor(Math.random() * e.length),
                        r = Math.floor(Math.random() * a.length);
                    t.find(".items-count").text(e[i]), t.find(".hours-num").text(a[r])
                }), (a = $("[data-customer-view]")).length && a.each(function() {
                    var t = $(this);
                    setInterval(function() {
                        var e = t.data("customer-view").split(","),
                            a = Math.floor(Math.random() * e.length);
                        t.find("label").text(e[a])
                    }, 5e3)
                }), $.getScript("https://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-595b0ea2fb9c5869").done(function() {
                    "undefined" != typeof addthis && (addthis.init(), addthis.layers.refresh())
                }), $(".shopify-product-reviews-badge").length && $(".spr-badge").length ? (window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges()) : void 0
        }

        function e() {
            return window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency
        }

        function a() {
            $(document).on("click", "[data-quickview]", function(e) {
                e.preventDefault(), e.stopPropagation(),
                    function(e) {
                        $.ajax({
                            type: "get",
                            url: "/products/" + e + "?view=quickview",
                            beforeSend: function() {
                                $(".loading-modal").show()
                            },
                            success: function(e) {
                                var a = $("#product_quickview"),
                                    r = a.find(".product_template");
                                r.html(e), setTimeout(function() {
                                        t()
                                    }, 700), $(".loading-modal").hide(), theme.wishlist.init(), $("#product_quickview").modal("show"),
                                    function() {
                                        $("#product_quickview").on("keyup", function(t) {
                                            t.keyCode === slate.utils.keyboardKeys.ESCAPE && i()
                                        }.bind(this)), $("#product_quickview .close-modal").on("click", i.bind(this)), $("#product_quickview").on("click", function(t) {
                                            0 === $(t.target).closest("#product_quickview .modal-quickview").length && i()
                                        })
                                    }()
                            }
                        })
                    }($(this).attr("id"))
            })
        }

        function i() {
            $("#product_quickview").modal("hide"), setTimeout(function() {
                $("#product_quickview .product_template").html("")
            }, 500)
        }

        function r(t) {
            t ? (this.$addToCart.attr("aria-disabled", !0), this.$addToCartText.addClass(this.classes.hidden), this.$loader.removeClass(this.classes.hidden), this.$shopifyPaymentButton.attr("disabled", !0), this.$loaderStatus.attr("aria-hidden", !1)) : (this.$addToCart.removeAttr("aria-disabled"), this.$addToCartText.removeClass(this.classes.hidden), this.$loader.addClass(this.classes.hidden), this.$shopifyPaymentButton.removeAttr("disabled"), this.$loaderStatus.attr("aria-hidden", !0))
        }

        function o() {
            this.$errorMessageWrapper.addClass(this.classes.productFormErrorMessageWrapperHidden), 0 !== this.$quantityInput.length && this.$quantityInput.removeClass(this.classes.inputError)
        }

        function n(t) {
            var e = 0 === t.detail;
            this.$cartPopupWrapper.prepareTransition().addClass(this.classes.cartPopupWrapperHidden), $(this.selectors.cartPopupImage).remove(), this.$cartPopupImagePlaceholder.removeClass(this.classes.hidden), slate.a11y.removeTrapFocus({
                $container: this.$cartPopupWrapper,
                namespace: "cartPopupFocus"
            }), e && this.$previouslyFocusedElement[0].focus(), this.$cartPopupWrapper.off("keyup"), this.$cartPopupClose.off("click"), this.$cartPopupDismiss.off("click"), $("body").off("click")
        }

        function s(t) {
            void 0 === t && (t = $(this.selectors.productImageWraps + ":not(.hide)", this.$container).data("image-id"));
            var e = $(this.selectors.productThumbListItem + ":not(.slick-cloned)", this.$container),
                a = e.find(this.selectors.productThumbImages + "[data-thumbnail-id='" + t + "']");
            $(this.selectors.productThumbImages).removeClass(this.classes.activeClass).removeAttr("aria-current"), a.addClass(this.classes.activeClass), a.attr("aria-current", !0);
            var i = $(this.selectors.productThumbs, this.$container);
            setTimeout(function() {
                if (e.hasClass("slick-slide")) {
                    var t = a.parent().data("slick-index");
                    i.slick("slickGoTo", t)
                }
            }, 300)
        }

        function c(t) {
            var e = $(this.selectors.productImageWraps + "[data-image-id='" + t + "']", this.$container),
                a = $(this.selectors.productImageWraps + ":not([data-image-id='" + t + "'])", this.$container);
            $(".product-slider").hasClass("custom") && (e.removeClass(this.classes.hidden), a.addClass(this.classes.hidden))
        }

        function l(t) {
            var a = t.variant,
                i = $(this.selectors.priceContainer, this.$container),
                r = $(this.selectors.regularPrice, i),
                o = $(this.selectors.salePrice, i),
                n = ($(this.selectors.unitPrice, i), $(this.selectors.inventory, this.$container));
            $(this.selectors.unitPriceBaseUnit, i);
            if (i.removeClass(this.classes.productUnavailable).removeClass(this.classes.productOnSale).removeClass(this.classes.productUnitAvailable).removeAttr("aria-hidden"), !a) return i.addClass(this.classes.productUnavailable).attr("aria-hidden", !0), i.find(".price-item--sale").addClass(this.classes.productUnavailable), void n.removeClass("variant-inventory--true");
            !0 === a.available ? n.addClass("variant-inventory--true") : n.removeClass("variant-inventory--true");
            var s = parseInt($(".product_quickview [data-quantity-input]").val());
            a.compare_at_price > a.price ? (r.html(theme.Currency.formatMoney(a.compare_at_price, theme.moneyFormat)), o.html(theme.Currency.formatMoney(a.price, theme.moneyFormat)), $("[data-total-price-qv]").attr("data-price-value", a.price), $("[data-total-price-qv]").html(theme.Currency.formatMoney(a.price * s, theme.moneyFormat)), i.addClass(this.classes.productOnSale)) : (r.html(theme.Currency.formatMoney(a.price, theme.moneyFormat)), o.html(""), $("[data-total-price-qv]").attr("data-price-value", a.price), $("[data-total-price-qv]").html(theme.Currency.formatMoney(a.price * s, theme.moneyFormat))), e() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
        }

        function d(t) {
            return t < 10 ? "<span class='num'>0</span><span class='num'>" + t + "</span>" : "<span class='num'>" + parseInt(t / 10) + "</span><span class='num'>" + t % 10 + "</span>"
        }
        return {
            init: function() {
                a()
            }
        }
    }(), theme.product_card = function() {
        function t() {
            this.selectors = {
                cartCount: "[data-cart-count]",
                cartCountBubble: "[data-cart-count-bubble]",
                cartPopup: "[data-cart-popup]",
                cartPopupCartQuantity: "[data-cart-popup-cart-quantity]",
                cartPopupClose: "[data-cart-popup-close]",
                cartPopupDismiss: "[data-cart-popup-dismiss]",
                cartPopupImage: "[data-cart-popup-image]",
                cartPopupImageWrapper: "[data-cart-popup-image-wrapper]",
                cartPopupImagePlaceholder: "[data-cart-popup-image-placeholder]",
                cartPopupProductDetails: "[data-cart-popup-product-details]",
                cartPopupQuantity: "[data-cart-popup-quantity]",
                cartPopupQuantityLabel: "[data-cart-popup-quantity-label]",
                cartPopupTitle: "[data-cart-popup-title]",
                cartPopupWrapper: "[data-cart-popup-wrapper]"
            },
            $(document).on("click", "[data-btn-addToCart]", function(t) {
                t.preventDefault(), t.stopPropagation();
                var a = $(this),
                    i = {
                        url: "/cart/add.js",
                        data: $(a.data("form-id")).serialize(),
                        dataType: "json"
                    };
                $.post(i).done(function(t) {
                    ! function(t) {
                        this.$cartPopup = this.$cartPopup || $(this.selectors.cartPopup), this.$cartPopupWrapper = this.$cartPopupWrapper || $(this.selectors.cartPopupWrapper), this.$cartPopupTitle = this.$cartPopupTitle || $(this.selectors.cartPopupTitle), this.$cartPopupQuantity = this.$cartPopupQuantity || $(this.selectors.cartPopupQuantity), this.$cartPopupQuantityLabel = this.$cartPopupQuantityLabel || $(this.selectors.cartPopupQuantityLabel), this.$cartPopupClose = this.$cartPopupClose || $(this.selectors.cartPopupClose), this.$cartPopupDismiss = this.cartPopupDismiss || $(this.selectors.cartPopupDismiss),
                            function() {
                                this.$cartPopupWrapper.on("keyup", function(t) {
                                    t.keyCode === slate.utils.keyboardKeys.ESCAPE && this._hideCartPopup(t)
                                }.bind(this)), this.$cartPopupClose.on("click", e.bind(this)), this.$cartPopupDismiss.on("click", e.bind(this)), $("body").on("click", function(t) {
                                    var a = $(t.target);
                                    a[0] === this.$cartPopupWrapper[0] || a.parents(this.selectors.cartPopup).length || e(t)
                                }.bind(this))
                            }(),
                            function(t) {
                                this.$cartPopupTitle.text(t.product_title), this.$cartPopupQuantity.text(1), this.$cartPopupQuantityLabel.text(theme.strings.quantityLabel.replace("[count]", 1)),
                                    function(t, e) {
                                        if (this.$cartPopupImageWrapper = this.$cartPopupImageWrapper || $(this.selectors.cartPopupImageWrapper), this.$cartPopupImagePlaceholder = this.$cartPopupImagePlaceholder || $(this.selectors.cartPopupImagePlaceholder), null === t) return void this.$cartPopupImageWrapper.addClass(this.classes.hidden);
                                        this.$cartPopupImageWrapper.removeClass(this.classes.hidden);
                                        var a = theme.Images.getSizedImageUrl(t, "200x"),
                                            i = document.createElement("img");
                                        i.src = a, i.alt = e, i.dataset.cartPopupImage = "", i.onload = function() {
                                            this.$cartPopupImagePlaceholder.addClass(this.classes.hidden), this.$cartPopupImageWrapper.append(i)
                                        }.bind(this)
                                    }(t.image, t.title),
                                    function(t) {
                                        this.$cartPopupProductDetails = this.$cartPopupProductDetails || $(this.selectors.cartPopupProductDetails);
                                        var e = "";
                                        null !== t && 0 !== Object.keys(t).length && (e += function(t) {
                                            var e = "";
                                            return Object.entries(t).forEach(function(t) {
                                                "_" !== t[0].charAt(0) && 0 !== t[1].length && (e = e + '<li class="product-details__item product-details__item--property"><span class="product-details__property-label">' + t[0] + ": </span>" + t[1])
                                            }), e
                                        }(t));
                                        0 === e.length ? (this.$cartPopupProductDetails.html(""), this.$cartPopupProductDetails.attr("hidden", "")) : (this.$cartPopupProductDetails.html(e), this.$cartPopupProductDetails.removeAttr("hidden"))
                                    }(t.properties), $.getJSON("/cart.js").then(function(t) {
                                        ! function(t) {
                                            var e;
                                            this.$cartPopupCartQuantity = this.$cartPopupCartQuantity || $(this.selectors.cartPopupCartQuantity), 1 === t ? e = theme.strings.oneCartCount : t > 1 && (e = theme.strings.otherCartCount.replace("[count]", t));
                                            this.$cartPopupCartQuantity.text(t).attr("aria-label", e)
                                        }(t.item_count),
                                        function(t) {
                                            this.$cartCountBubble = this.$cartCountBubble || $(this.selectors.cartCountBubble), this.$cartCount = this.$cartCount || $(this.selectors.cartCount), this.$cartCountBubble.removeClass(this.classes.hidden), this.$cartCount.text(t)
                                        }(t.item_count),
                                        function() {
                                            this.$cartPopupWrapper.prepareTransition().removeClass(this.classes.cartPopupWrapperHidden), slate.a11y.trapFocus({
                                                $container: this.$cartPopupWrapper,
                                                $elementToFocus: this.$cartPopup,
                                                namespace: "cartPopupFocus"
                                            })
                                        }()
                                    }.bind(this))
                            }(t)
                    }(t)
                }.bind(this))
            })
        }

        function e(t) {
            var e = 0 === t.detail;
            this.$cartPopupWrapper.prepareTransition().addClass(this.classes.cartPopupWrapperHidden), $(this.selectors.cartPopupImage).remove(), this.$cartPopupImagePlaceholder.removeClass(this.classes.hidden), slate.a11y.removeTrapFocus({
                $container: this.$cartPopupWrapper,
                namespace: "cartPopupFocus"
            }), e && this.$previouslyFocusedElement[0].focus(), this.$cartPopupWrapper.off("keyup"), this.$cartPopupClose.off("click"), this.$cartPopupDismiss.off("click"), $("body").off("click")
        }
        return {
            init: function() {
                t()
            }
        }
    }(), theme.product_sticky_atc = function() {
        return {
            init: function() {
                var t, e;
                ! function() {
                    var t = $("[data-sticky-add-to-cart]"),
                        e = t.find(".pr-active"),
                        a = t.find(".pr-swatch"),
                        i = $(".product-form__variants option:selected").val(),
                        r = t.find('.pr-swatch[data-value="' + i + '"]'),
                        o = r.html();
                    e.html(o), r.addClass("active");
                    var n = r.data("img");
                    $(".sticky-add-to-cart .product-on-cart .product-image img").attr({
                        src: n
                    }), $(".selector-wrapper").change(function() {
                        var t, i = $(".product-form__variants").val();
                        if ($(".sticky_form .pr-selectors li").each(function(e) {
                                $(this).find("a").data("value") == i ? ($(this).find("a").addClass("active"), t = $(this).find("a").data("img")) : $(this).find("a").removeClass("active")
                            }), null != t && $(".sticky-add-to-cart .product-on-cart .product-image img").attr({
                                src: t
                            }), a.hasClass("active")) {
                            var r = $(".sticky_form .pr-swatch.active").html();
                            $(".sticky_form .action input[type=hidden]").val(i), e.html(r), e.attr("data-value", i)
                        }
                    })
                }(), t = $("[data-sticky-add-to-cart]"), e = t.find(".pr-active"), t.find(".pr-swatch"), e.off("click.showListVariant").on("click.showListVariant", function(e) {
                        e.preventDefault(), t.toggleClass("open-sticky")
                    }), $(document).off("click.hideVariantsOption").on("click.hideVariantsOption", function(a) {
                        e.is(a.target) || 0 !== e.has(a.target).length || t.removeClass("open-sticky")
                    }),
                    function() {
                        var t = $("[data-sticky-add-to-cart]"),
                            e = t.find(".pr-active"),
                            a = t.find(".pr-swatch");
                        a.on("click", function(i) {
                            var r = $(this),
                                o = r.text(),
                                n = r.data("value"),
                                s = (r.data("title"), r.data("img"));
                            return a.removeClass("active"), r.addClass("active"), t.toggleClass("open-sticky"), t.find(".action-wrapper input[type=hidden]").val(n), e.attr("data-value", n).text(o), r.hasClass("sold-out") ? t.find(".btn-sticky-add-to-cart").val(theme.strings.soldOut).addClass("disabled").attr("disabled", "disabled") : t.find(".btn-sticky-add-to-cart").removeClass("disabled").removeAttr("disabled").val(theme.strings.addToCart), $(".sticky-add-to-cart .product-on-cart .product-image img").attr({
                                src: s
                            }), !1
                        })
                    }(), $(document).on("click", "[data-sticky-btn-addToCart]", function(t) {
                        t.preventDefault(), $("[data-product-form] [data-add-to-cart]").length && $("[data-product-form] [data-add-to-cart]").click()
                    }),
                    function() {
                        if ($("[data-sticky-add-to-cart]").length) {
                            var t = $("[data-add-to-cart]").offset().top + $("[data-add-to-cart]").height();
                            $(window).scroll(function() {
                                $(this).scrollTop() > t ? $("body").addClass("show_sticky") : $("body").removeClass("show_sticky")
                            })
                        }
                    }()
            }
        }
    }(), theme.products_frequently_by_together = function() {
        $("[data-bundle-images-slider]");
        var t = ".fbt-toogle-options",
            e = $(".products-grouped-action .bundle-price"),
            a = $(".products-grouped-info[data-slick]"),
            i = ".fbt-checkbox label",
            r = $(".frequently-bought-together-block"),
            o = $("[data-cart-count]"),
            n = $("[data-cart-count-bubble]"),
            s = $("[data-cart-popup-frequently]"),
            c = ($("[data-cart-popup-cart-quantity]"), $("[data-cart-popup-close-frequently]")),
            l = $("[data-cart-popup-dismiss-frequently]"),
            d = ($("[data-cart-popup-image]"), $("[data-cart-popup-image-wrapper]"), $("[data-cart-popup-image-placeholder]"), $("[data-cart-popup-product-details]"), $("[data-cart-popup-quantity]")),
            p = $("[data-cart-popup-quantity-label]"),
            u = $("[data-cart-popup-title]"),
            h = $("[data-cart-popup-frequently-wrapper]"),
            m = $("[data-bundle-addtocart]", r),
            f = $("[data-add-to-cart-text]", r),
            
            g = $("[data-error-message-wrapper]", r),
            b = $("[data-loader]", m),
            w = $("[data-loader-status]", r);

        function y() {
            var t = r.find(".fbt-item.isChecked"),
                e = $(".products-grouped-action .bundle-price"),
                a = $(".products-grouped-action .old-price"),
                o = ($(".products-grouped-action .price-item--regular.price"), e.data("discount-rate")),
                n = 0;
            $(".fbt-item.isChecked").length, $(".fbt-item").length;
            t.each(function() {
                var t = parseFloat($(this).find("[data-fbt-price-change]").attr("data-price"));
                t && (n += t)
            }), $(i).length == t.length ? (window.bundleMatch = !0, a.html(theme.Currency.formatMoney(n, theme.moneyFormat)).show(), e.html(theme.Currency.formatMoney(n * (1 - o), theme.moneyFormat))) : (window.bundleMatch = !1, a.html("").hide(), e.html(theme.Currency.formatMoney(n, theme.moneyFormat))), (window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency) && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
        }

        function C(t) {
            var e = function(t) {
                    var e = r.find('[data-bundle-product-id="' + t + '"]'),
                        a = _.map($(".single-option-selector-frequently", e), function(t) {
                            var e = $(t),
                                a = e.attr("type"),
                                i = {};
                            return "radio" === a || "checkbox" === a ? !!e[0].checked && (i.value = e.val(), i.index = e.data("index"), i) : (i.value = e.val(), i.index = e.data("index"), i)
                        });
                    return a = _.compact(a)
                }(t),
                a = window.productVariants[t];
            if (a) return _.find(a, function(t) {
                return e.every(function(e) {
                    return _.isEqual(t[e.index], e.value)
                })
            })
        }
        var k = {};

        function P() {
            $(".single-option-selector-frequently", this.$bundleContainer).on("change", function(t) {
                const e = $(t.currentTarget).closest("[data-bundle-product-id]").data("bundle-product-id"),
                    a = $(t.currentTarget).data("index"),
                    i = $(t.currentTarget).val();
                if (e) {
                    for (var o = window.productVariants[e], n = 0; n < o.length; n++) o[n].id == r.find("#ProductSelect-" + e).val() && (k = o[n]);
                    var s = C(e);
                    if (T(), !s) return;
                    ! function(t, e) {
                        r.find("#ProductSelect-" + t).val(e.id).trigger("change")
                    }(e, s),
                    function(t, e) {
                        var a = e.featured_image || {},
                            i = k.featured_image || {};
                        e.featured_image && a.src !== i.src && r.find('[data-bundle-product-id="' + t + '"] img').attr("src", a.src)
                    }(e, s),
                    function(t, e) {
                        if (e.price !== k.price || e.compare_at_price !== k.compare_at_price) {
                            var a = $(".product-price", r.find('[data-bundle-product-id="' + t + '"]')),
                                i = $(".price-item--regular", a),
                                o = $(".price-item--sale", a),
                                n = $("[data-unit-price]", a),
                                s = $("[data-unit-price-base-unit]", a);
                            a.removeClass(v.productUnavailable).removeClass(v.productOnSale).removeClass(v.productUnitAvailable).removeAttr("aria-hidden"), e ? (e.compare_at_price > e.price ? (i.html(theme.Currency.formatMoney(e.compare_at_price, theme.moneyFormat)), o.html(theme.Currency.formatMoney(e.price, theme.moneyFormat)), a.addClass(v.productOnSale)) : (i.html(theme.Currency.formatMoney(e.price, theme.moneyFormat)), o.html("")), $("[data-fbt-price-change]", a).attr("data-price", e.price), e.unit_price && (n.html(theme.Currency.formatMoney(e.unit_price, theme.moneyFormat)), s.html(function(t) {
                                return 1 === t.unit_price_measurement.reference_value ? t.unit_price_measurement.reference_unit : t.unit_price_measurement.reference_value + t.unit_price_measurement.reference_unit
                            }(e)), a.addClass(v.productUnitAvailable))) : a.addClass(v.productUnavailable).attr("aria-hidden", !0)
                        }
                    }(e, s),
                    function(t, e, a, i) {
                        if (e && t) {
                            var o = window.productVariants[t],
                                n = r.find('[data-bundle-product-id="' + t + '"]');
                            _.map($(".single-option-selector-frequently", n), function(t) {
                                var e = $(t),
                                    r = e.data("index");
                                r != a && _.find(o, function(t) {
                                    if (_.isEqual(t[a], i) && _.isEqual(t[r], e.val())) return t.available ? (e.removeAttr("disabled"), e.parent().removeClass("soldout")) : (e.attr("disabled", "disabled"), e.parent().addClass("soldout"), e[0].checked && $("[name=" + e.attr("name") + "]:first").attr("checked", !0)), !1
                                })
                            })
                        }
                    }(e, s, a, i), y()
                }
            })
        }

        function S(t) {
            t ? (m.attr("aria-disabled", !0), f.addClass(v.hidden), b.removeClass(v.hidden), w.attr("aria-hidden", !1)) : (m.removeAttr("aria-disabled"), f.removeClass(v.hidden), b.addClass(v.hidden), w.attr("aria-hidden", !0))
        }

        function T() {
            g.addClass(v.productFormErrorMessageWrapperHidden)
        }

        function I() {
            $(".frequently-bought-together_form", this.$bundleContainer).on("submit", function(t) {
                t.preventDefault(), S(!0);
                var e = $(t.currentTarget).find(".fbt-item.isChecked");
                Shopify.queue = [];
                e.length;
                e.each(function() {
                        var t = $(this).find('[name="group_id"]').val();
                        "" !== t && Shopify.queue.push({
                            variantId: t,
                            quantity: 1
                        })
                    }),
                    function t(e) {
                        if (!Shopify.queue.length) return S(!1), !1;
                        var a = Shopify.queue.shift(),
                            i = {
                                url: window.router + "/cart/add.js",
                                data: "quantity=" + a.quantity + "&id=" + a.variantId + "&form_type=product",
                                dataType: "json"
                            };
                        if ($.post(i).done(function(e) {
                                t(), T(),
                                    function(t, e) {
                                        this.$cartPopup = this.$cartPopup || s, this.$cartPopupWrapper = this.$cartPopupWrapper || h, this.$cartPopupTitle = this.$cartPopupTitle || u, this.$cartPopupQuantity = this.$cartPopupQuantity || d, this.$cartPopupQuantityLabel = this.$cartPopupQuantityLabel || p, this.$cartPopupClose = this.$cartPopupClose || c, this.$cartPopupDismiss = this.cartPopupDismiss || l,
                                            function() {
                                                this.$cartPopupWrapper.on("keyup", function(t) {
                                                    t.keyCode === slate.utils.keyboardKeys.ESCAPE && this._hideCartPopup(t)
                                                }.bind(this)), this.$cartPopupClose.on("click", x.bind(this)), this.$cartPopupDismiss.on("click", x.bind(this)), $("body").on("click", function(t) {
                                                    var e = $(t.target);
                                                    e[0] === this.$cartPopupWrapper[0] || e.parents(this.selectors.cartPopup).length || x(t)
                                                }.bind(this))
                                            }(),
                                            function(t, e) {
                                                $("[data-cart-popup-frequently-wrapper] .cart-popup-content").prepend(function(t, e) {
                                                    var a = "";
                                                    return a += '<div class="cart-popup-item">', a += '<div class="cart-popup-item__image-wrapper" data-cart-popup-image-wrapper>', a += '<img src="' + e.image + '" alt="">', a += "</div>", a += '<div class="cart-popup-item__description">', a += "<div>", a += '<div class="cart-popup-item__title" data-cart-popup-title>' + e.product_title + "</div>", a += '<ul class="product-details" data-cart-popup-product-details>' + (i = e.variant_options, r = "", i.forEach(function(t) {
                                                        r = r + '<li class="product-details__item product-details__item--variant-option">' + t + "</li>"
                                                    }), r) + "</ul>", a += '<div class="cart-popup-desciption">' + t.strings.added_to_cart + "</div>", a += "</div></div></div>";
                                                    var i, r
                                                }(theme, t)), $.getJSON("/cart.js").then(function(t) {
                                                    ! function(t) {
                                                        this.$cartCountBubble = this.$cartCountBubble || n, this.$cartCount = this.$cartCount || o, this.$cartCountBubble.removeClass(this.classes.hidden), this.$cartCount.text(t)
                                                    }(t.item_count), setTimeout(function() {
                                                        ! function() {
                                                            this.$cartPopupWrapper.prepareTransition().removeClass(this.classes.cartPopupWrapperHidden), S(!1), slate.a11y.trapFocus({
                                                                $container: this.$cartPopupWrapper,
                                                                $elementToFocus: this.$cartPopup,
                                                                namespace: "cartPopupFocus"
                                                            })
                                                        }()
                                                    }, 500)
                                                }.bind(this));
                                                this.$cartPopupClose
                                            }(t)
                                    }(e)
                            }.bind(this)).fail(function(t) {
                                ! function(t) {
                                    $(this.selectors.errorMessage, this.$container).html(t), g.removeClass(this.classes.productFormErrorMessageWrapperHidden).attr("aria-hidden", !0).removeAttr("aria-hidden")
                                }(t.responseJSON.description), S(!1)
                            }.bind(this)), 0 == Shopify.queue.length) try {
                            var r = "FBT-BUNDLE-" + meta.product.id;
                            ! function(t) {
                                window.bundleMatch && $.ajax({
                                    url: window.router + "/discount/" + t,
                                    success: function(t) {}
                                })
                            }(r)
                        } catch (t) {}
                    }()
            }.bind(this))
        }

        function x(t) {
            var e = 0 === t.detail;
            this.$cartPopupWrapper.prepareTransition().addClass(this.classes.cartPopupWrapperHidden), setTimeout(function() {
                $("[data-cart-popup-frequently-wrapper] .cart-popup-content").html("")
            }, 500), slate.a11y.removeTrapFocus({
                $container: this.$cartPopupWrapper,
                namespace: "cartPopupFocus"
            }), e && this.$previouslyFocusedElement[0].focus(), this.$cartPopupWrapper.off("keyup"), this.$cartPopupClose.off("click"), this.$cartPopupDismiss.off("click"), $("body").off("click")
        }
        return {
            init: function() {
                a.length && (a.hasClass("slick-slider") || a.slick()), $(document).on("click", t, function(t) {
                        t.preventDefault(), $(this).parents(".product-content").next().slideToggle()
                    }), $(document).on("click", ".close-options", function(t) {
                        t.preventDefault(), $(this).parent().slideToggle()
                    }),
                    function() {
                        if (e.length > 0) {
                            var t = 100 * e.data("discount-rate"),
                                a = $(".products-grouped-action .discount-text");
                            a.length > 0 && a.each(function() {
                                $(this).text($(this).text().replace("[discount]", t))
                            })
                        }
                    }(), $(document).on("click", i, function(t) {
                        t.preventDefault();
                        var e = $(this),
                            a = e.prev(),
                            i = e.closest(".fbt-item").data("bundle-product-id");
                        a.prop("checked") ? (a.prop("checked", !1), $('[data-bundle-product-id="' + i + '"]').removeClass("isChecked")) : (a.prop("checked", !0), $('[data-bundle-product-id="' + i + '"]').addClass("isChecked")), y()
                    }), P(), y(), I()
            }
        }
    }(), theme.ProductRecommendations = function() {
        var t = "[data-product-card]";

        function e(t) {
            this.$container = $(t);
            var e = this.$container.data("productId"),
                a = window.router + "/recommendations/products?&section_id=product-recommendations&product_id=" + e + "&limit=5";
            $.get(a).then(function(t) {
                var e = $(t).html();
                "" !== e.trim() && (this.$container.html(e), this.sendTrekkieEvent()), theme.wishlist.init(), (window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency) && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format"), $(".product-recommendations__inner").each(function(t) {
                    var e = $(this).find("[data-slick]");
                    e.length && (e.hasClass("slick-slider") || e.slick()), $(".product-recommendations__inner .btn-arrow-prev").on("click", function(t) {
                        t.preventDefault(), $(".product-recommendations__inner .slick-slider").slick("slickPrev")
                    }), $(".product-recommendations__inner .btn-arrow-next").on("click", function(t) {
                        t.preventDefault(), $(".product-recommendations__inner .slick-slider").slick("slickNext")
                    })
                })
            }.bind(this))
        }
        return e.prototype = _.assignIn({}, e.prototype, {
            sendTrekkieEvent: function() {
                if (window.ShopifyAnalytics && window.ShopifyAnalytics.lib && window.ShopifyAnalytics.lib.track) {
                    var e = this.$container[0].getBoundingClientRect().top <= window.innerHeight,
                        a = this.$container.find(t).length;
                    window.ShopifyAnalytics.lib.track("Product Recommendations Displayed", {
                        theme: "debut",
                        didPageJumpOccur: e,
                        numberOfRecommendationsDisplayed: a
                    })
                }
            }
        }), e
    }(), theme.VideoSection = function() {
        return function(t) {
            var e = this.$container = $(t);
            $(".video", e).each(function() {
                var t = $(this);
                theme.Video.init(t), theme.Video.editorLoadVideo(t.attr("id"))
            })
        }
    }(), theme.VideoSection.prototype = _.assignIn({}, theme.VideoSection.prototype, {
        onUnload: function() {
            theme.Video.removeEvents()
        }
    }), theme.SlideshowSection = function() {
        function t(t) {
            t.each(function() {
                var t = $(this);
                if (t.find(".youtube").length > 0) {
                    function e(t, e) {
                        null != t && null != e && t.contentWindow.postMessage(JSON.stringify(e), "*")
                    }

                    function a(t, a) {
                        var i, r, o;
                        if (r = (i = t.find(".slick-current .slide-video")).find("iframe").get(0), i.hasClass("youtube")) switch (a) {
                            case "play":
                                e(r, {
                                    event: "command",
                                    func: "mute"
                                }), e(r, {
                                    event: "command",
                                    func: "playVideo"
                                });
                                break;
                            case "pause":
                                e(r, {
                                    event: "command",
                                    func: "pauseVideo"
                                })
                        } else i.hasClass("mp4") && null != (o = i.children("video").get(0)) && ("play" === a ? o.play() : o.pause())
                    }
                    t.addClass("slick-slider--video"), t.on("init", function(t) {
                        t = $(t.currentTarget), console.log("x"), setTimeout(function() {
                            a(t, "play")
                        }, 1e3)
                    }), t.on("beforeChange", function(t, e) {
                        a(e = $(e.$slider), "pause")
                    }), t.on("afterChange", function(t, e) {
                        a(e = $(e.$slider), "play")
                    })
                }
            })
        }
        return function() {
            var e = $(".slideshow[data-slick]");
            e.length && (e.slick(), function(e) {
                if (e.find(".youtube").length > 0)
                    if ("undefined" == typeof YT || void 0 === YT.Player) {
                        var a = document.createElement("script");
                        a.src = "https://www.youtube.com/iframe_api";
                        var i = document.getElementsByTagName("script")[0];
                        i.parentNode.insertBefore(a, i), window.onYouTubeIframeAPIReady = t.bind(window, e)
                    } else t(e)
            }(e)), e.each(function() {
                var t = $(this);
                t.find(".slide-video").length && t.find(".slide-video").css("height", t.height())
            })
        }
    }(), theme.collection = function() {
        function t() {
            return window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency
        }

        function e(e, a, r, o) {
            $.ajax({
                type: "get",
                url: e,
                cache: !1,
                data: {
                    view: "json",
                    limit: "&" + o
                },
                beforeSend: function() {},
                success: function(o) {
                    if (a.remove(), e == window.router + "/collections/?view=json") a.html("<p>Please link to collections</p>").show();
                    else if (r.html($(o).html()), r.hasClass("collection-carousel") && ((n = r).hasClass("slick-slider") || n.slick(), i(), t() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format"), $(".shopify-product-reviews-badge").length && $(".spr-badge").length)) return window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges();
                    var n
                },
                complete: function() {},
                error: function(t, e) {
                    a.text("Sorry, there are no products in this collection").show()
                }
            })
        }

        function a(t) {
            return t < 10 ? "<span class='num'>0</span><span class='num'>" + t + "</span>" : "<span class='num'>" + parseInt(t / 10) + "</span><span class='num'>" + t % 10 + "</span>"
        }

        function i() {
            $(".product-countdown[data-countdown]").each(function() {
                if (!$(this).hasClass("has-value")) var t = $(this),
                    e = new Date(t.attr("data-countdown-value")).getTime(),
                    i = setInterval(function() {
                        var r = (new Date).getTime(),
                            o = e - r;
                        if (o < 0) clearInterval(i), document.getElementsByClassName("product-countdown").innerHTML = "";
                        else {
                            var n = Math.floor(o / 864e5),
                                s = Math.floor(o % 864e5 / 36e5),
                                c = Math.floor(o % 36e5 / 6e4),
                                l = Math.floor(o % 6e4 / 1e3),
                                d = "<span class='block-time'>" + function t(e) {
                                    return e < 10 ? "<span class='num'>0</span><span class='num'>" + e + "</span>" : e > 100 ? t(parseInt(e / 10)) + "<span class='num'>" + e % 10 + "</span>" : "<span class='num'>" + parseInt(e / 10) + "</span><span class='num'>" + e % 10 + "</span>"
                                }(n) + "<span class='block-label'>days</span></span><span class='block-time'>" + a(s) + "<span class='block-label'>hours</span></span><span class='block-time'>" + a(c) + "<span class='block-label'>mins</span></span><span class='block-time'>" + a(l) + "<span class='block-label'>secs</span></span>";
                            t.html(d), t.addClass("has-value")
                        }
                    }, 1e3)
            })
        }

        function r() {
            $(".infinite-scrolling").length && $(document).on("click", ".infinite-scrolling a", function(e) {
                (e.preventDefault(), e.stopPropagation(), $(this).hasClass("disabled")) || function(e) {
                    $.ajax({
                        type: "get",
                        url: e,
                        beforeSend: function() {
                            $(".loading-modal").show()
                        },
                        success: function(e) {
                            ! function(e) {
                                var a = $(".page-collections").find(".halo-column-product"),
                                    i = $(e).find(".page-collections"),
                                    r = i.find(".halo-column-product"),
                                    o = r.children(".halo-item"),
                                    n = i.find(".pagination-wrapper"),
                                    s = $(".infinite-scrolling a");
                                if (r.length && (a.append(o), $(e).find(".infinite-scrolling").length > 0 ? s.attr("href", i.find(".infinite-scrolling a").attr("href")) : s.addClass("hide"), $(".pagination-wrapper").html(n.html()), theme.wishlist.init(), t() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format"), $(".shopify-product-reviews-badge").length && $(".spr-badge").length)) window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges()
                            }(e)
                        },
                        complete: function() {
                            $(".loading-modal").hide()
                        }
                    })
                }($(this).attr("href"))
            })
        }
        return {
            init: function() {
                var t;
                setTimeout(function() {
                        $("[data-section-type='collection-tabs']").each(function(t) {
                            var a = $(this),
                                i = a.find(".nav-tabs").find(".nav-link"),
                                r = a.find(".tab-pane"),
                                o = a.find(".nav-tabs .nav-link.active"),
                                n = a.find(".nav-tabs .nav-link").data("row"),
                                s = a.find(".tab-content .tab-pane.active");
                            e(o.data("href"), s.find(".halo-loading"), s.find(".halo-row"), n), i.on("click", function(t) {
                                if (t.preventDefault(), !$(this).hasClass("active")) {
                                    i.removeClass("active"), r.removeClass("active").removeClass("show");
                                    var a = $(this),
                                        o = $(a.attr("href"));
                                    a.addClass("active"), o.addClass("active show"), o.find(".halo-loading").length ? e(a.data("href"), o.find(".halo-loading"), o.find(".halo-row"), n) : o.find(".collection-carousel").slick("setPosition")
                                }
                            })
                        })
                    }, 4500), $(".collection-more").each(function() {
                        var t = $(this).find("[data-slick]");
                        t.length && (t.hasClass("slick-slider") || t.slick())
                    }),
                    function() {
                        if ($(".custom-html").length) {
                            var t = $(".custom-html").find(".container"),
                                e = theme.strings.showMore,
                                a = theme.strings.showLess,
                                i = '<div class="button-group text-center"><a id="button-showmore-html" class="btn btn--secondary btn--big" href="#"><span class="text">' + theme.strings.showMore + '</span><svg aria-hidden="true" focusable="false" role="presentation" class="icon icon--wide icon-chevron-down" viewBox="0 0 498.98 284.49"><defs></defs><path class="cls-1" d="M80.93 271.76A35 35 0 0 1 140.68 247l189.74 189.75L520.16 247a35 35 0 1 1 49.5 49.5L355.17 511a35 35 0 0 1-49.5 0L91.18 296.5a34.89 34.89 0 0 1-10.25-24.74z" transform="translate(-80.93 -236.76)"/></svg></a>';
                            t.each(function() {
                                var t = $(this).html();
                                if (t.length > 600) {
                                    var e = t.substr(0, 600) + '<span class="moreellipses">...&nbsp;</span><span class="morecontent"><span>' + t.substr(600, t.length - 600) + "</span></span>";
                                    e += i, $(this).html(e)
                                }
                            }), $("#button-showmore-html").on("click", function(i) {
                                i.preventDefault(), $(this).hasClass("less") ? ($(this).removeClass("less"), $(this).find(".text").html(e), t.removeClass("showmore")) : ($(this).addClass("less"), $(this).find(".text").html(a), t.addClass("showmore"))
                            })
                        }
                    }(), t = $("#collection-page"), $(document).on("click", ".view-as-btn a", function() {
                        var e = $(this).attr("data-layout");
                        document.getElementById("collection-page").className = "", t.addClass(e)
                    }), i(), $("[data-section-type='collection-tabs'] .collection-tab-banner").each(function() {
                        var t = $(this).find("[data-slick]");
                        t.length && (t.hasClass("slick-slider") || t.slick())
                    }), r()
            }
        }
    }(), theme.homepage_section = function() {
        function t(t, e) {
            t.hide(700), !t.find('input[name="dismiss"]').prop("checked") && t.find('input[name="dismiss"]').length || $.cookie("emailSubcribeModal", "closed", {
                expires: e,
                path: "/"
            })
        }
        return {
            init: function() {
                $("[data-section-type='logolist']").length && $("[data-section-type='logolist']").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        $(window).width() < 1025 ? e.length && e.hasClass("slick-slider") && e.slick("unslick") : e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-section-type='featured-blog-section']").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        $(window).width() < 1025 ? e.length && e.hasClass("slick-slider") && e.slick("unslick") : e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-gallery-images]").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        $(window).width() < 1025 ? e.length && e.hasClass("slick-slider") && e.slick("unslick") : e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-gallery-images2]").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-section-type='featured-blog-section'] .halo-blog-layout-video").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        $(window).width() < 1025 ? e.length && e.hasClass("slick-slider") && e.slick("unslick") : e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-section-type='collection-list']").length && $("[data-section-type='collection-list']").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        $(window).width() < 1025 ? e.length && e.hasClass("slick-slider") && e.slick("unslick") : e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $("[data-section-type='quotes']").length && $("[data-section-type='quotes']").each(function(t) {
                        var e = $(this).find("[data-slick]");
                        e.length && (e.hasClass("slick-slider") || e.slick())
                    }), $(".btn-arrow-prev").on("click", function(t) {
                        t.preventDefault(), $(this).parents("[data-carousel]").find("[data-slick]").slick("slickPrev")
                    }), $(".btn-arrow-next").on("click", function(t) {
                        t.preventDefault(), $(this).parents("[data-carousel]").find("[data-slick]").slick("slickNext")
                    }), $("[data-section-type='collection'] [data-slick]").each(function(t) {
                        var e = $(this);
                        e.length && (e.hasClass("slick-slider") || e.slick())
                    }),
                    function() {
                        if (!$("#back-to-top").length) return;
                        var t = $(window).height() / 2;
                        const e = $("#back-to-top");
                        $(window).scroll(function() {
                            $(this).scrollTop() > t ? e.addClass("is-visible") : e.removeClass("is-visible")
                        }), e.on("click", function(t) {
                            t.preventDefault(), $("body,html").animate({
                                scrollTop: 0
                            }, 1e3)
                        })
                    }(),
                    function() {
                        if ($("#halo_newsletter").length) {
                            var e = $("#halo_newsletter"),
                                a = e.find(".popup-overlay"),
                                i = e.find(".close"),
                                r = $(".newsletterPopup").data("delay"),
                                o = $(".newsletterPopup").data("expire");
                            e.find(".newsletterPopup"), "closed" != $.cookie("emailSubcribeModal") && setTimeout(function() {
                                e.show(700)
                            }, r), i.on("click", function(a) {
                                a.preventDefault(), t(e, o)
                            }), a.on("click", function(a) {
                                a.preventDefault(), t(e, o)
                            }), $("#mc_embed_signup form").submit(function() {
                                "" != $("#mc_embed_signup .email").val() && t(e, o)
                            })
                        }
                    }(), $("[data-section-type='hero-section']").length && ($(".btn-popup-video").on("click", function() {
                        var t = $(this).attr("data-id");
                        const e = '<div class="modal-content">                            <a data-dismiss="modal" class="close close-modal" href="javascript:void(0)">&#215;</a>                            <div class="popup-video" data-video-gallery>                                <div id="popup-video-content">                                    <div class="popup-video-main">                                        <iframe                                            id="player"                                            type="text/html"                                            width="100%"                                            frameborder="0"                                            webkitAllowFullScreen                                            mozallowfullscreen                                            allowFullScreen                                            src="' + $(this).attr("data-src") + '"                                            data-video-player>                                        </iframe>                                    </div>                                </div>                            </div>                        </div>';
                        $("#popup_video_" + t + " .modal-video").html(e)
                    }), $(document).on("click", function() {
                        0 === $(event.target).closest(".btn-popup-video").length && $(".halo_modal_video .modal-video .modal-content").length && $(".halo_modal_video .modal-video .modal-content").remove()
                    })), $(".points_popup .point").on("click", function() {
                        var t = $(this).parent(),
                            e = t.position(),
                            a = $(this).siblings();
                        $(window).width() < 1024 && a.css({
                            top: 100 - e.top,
                            left: 30 - e.left
                        }), t.addClass("is-open")
                    }), $(".custom-product-card .close").on("click", function() {
                        $(this).parents(".points_popup").removeClass("is-open")
                    }), $(document).on("click", function(t) {
                        0 === $(t.target).closest(".custom-product-card").length && 0 === $(t.target).closest(".points_popup").length && $(".points_popup").removeClass("is-open")
                    }), $("[data-fancybox]").fancybox({
                        mobile: {
                            clickContent: "close",
                            clickSlide: "close"
                        },
                        buttons: ["zoom", "slideShow", "close"]
                    }), $(".themevale_MultiCategory_wrapper_2").length && !$(".themevale_MultiCategory_wrapper").length && ($(window).width() < 1025 ? $(".themevale_MultiCategory_wrapper_2").length && $(".themevale_MultiCategory_wrapper_2").appendTo(".home-category-filter-sections.position-1") : $(".home-category-filter-sections.position-2 .themevale_MultiCategory_wrapper_2").length || $(".themevale_MultiCategory_wrapper_2").appendTo(".home-category-filter-sections.position-2"))
            }
        }
    }(), theme.header = function() {
        function t() {
            var t;
            $(".header-sticky").length && ($(window).width() > 1024 ? (t = $(".header-sticky").height(), function(t, e) {
                $(window).on("scroll load", function(t) {
                    var a = $(window).scrollTop();
                    a > e ? ($(".header-sticky").addClass("is-sticky"), $(".announcement-bar").hide(), $("body").css("padding-top", e), $(".halo-header-01").length && $(".halo-header-01 .halo-header-PC #site-nav").length && ($(".halo-header-01 .halo-header-PC #site-nav").appendTo(".halo_mobileNavigation_wrapper .site-nav-mobile-wrapper"), document.getElementById("site-nav").className = "site-nav-mobile")) : ($(".header-sticky").removeClass("is-sticky"), $(".announcement-bar").show(), $("body").css("padding-top", 0), $(".halo-header-01").length && $(".halo_mobileNavigation_wrapper #site-nav").length && ($(".halo_mobileNavigation_wrapper #site-nav").appendTo(".halo-header-01 .halo-header-PC .header-bottom .container"), document.getElementById("site-nav").className = "site-nav"))
                }), window.onload = function() {
                    $(window).scrollTop() > t && $(".header-sticky").addClass("is-sticky")
                }
            }($(".page-container").offset().top, t)) : (t = $(".halo-header-mobile").height(), function(t, e) {
                $(".halo-header-01").length && $(".halo-header-01 .halo-header-PC #site-nav").length && ($(".halo-header-01 .halo-header-PC #site-nav").appendTo(".halo_mobileNavigation_wrapper .site-nav-mobile-wrapper"), document.getElementById("site-nav").className = "site-nav-mobile");
                $(window).on("scroll load", function(t) {
                    var a = $(window).scrollTop();
                    a > e ? ($(".header-sticky").addClass("is-sticky"), $(".announcement-bar").hide(), $("body").css("padding-top", e)) : ($(".header-sticky").removeClass("is-sticky"), $(".announcement-bar").show(), $("body").css("padding-top", 0))
                }), window.onload = function() {
                    $(window).scrollTop() > t && $(".header-sticky").addClass("is-sticky")
                }
            }($(".page-container").offset().top, t)))
        }

        function e() {
            var t = $(".lang_currency-dropdown").find(".dropdown-label");
            t.length && t.is(":visible") ? (t.on("click", function(e) {
                e.preventDefault(), e.stopPropagation();
                var a = $(this).next();
                a.is(":visible") ? a.slideUp(300) : (t.next(".dropdown-menu").hide(), a.slideDown(300))
            }), $(document).on("click", function(t) {
                var e = $(".lang_currency-dropdown .dropdown-menu");
                e.is(t.target) || e.has(t.target).length || e.slideUp(300)
            })) : t.next(".dropdown-menu").css({
                display: ""
            })
        }
        return {
            init: function() {
                $(".logo-wrapper").length && ($(window).width() > 1024 ? $(".halo-header-mobile .logo-wrapper").length && $(".halo-header-mobile .logo-wrapper").appendTo(".halo-header-PC .header-middle-logo") : $(".halo-header-PC .logo-wrapper").length && $(".halo-header-PC .logo-wrapper").appendTo(".halo-header-mobile .header-Mobile-item.text-center .items")), $(".notice_flash_sale").length && ($(".notice_flash_sale").each(function() {
                        var t = $(this),
                            e = new Date(t.attr("data-count-down")).getTime(),
                            a = setInterval(function() {
                                var i = (new Date).getTime(),
                                    r = e - i;
                                if (r < 0) clearInterval(a), document.getElementById("flash-sale-time").innerHTML = "", t.hide();
                                else {
                                    var o = "<span class='block-time'>" + Math.floor(r / 864e5) + "D : </span><span class='block-time'>" + Math.floor(r % 864e5 / 36e5) + "H : </span><span class='block-time'>" + Math.floor(r % 36e5 / 6e4) + "M : </span><span class='block-time'>" + Math.floor(r % 6e4 / 1e3) + "S</span>";
                                    document.getElementById("flash-sale-time").innerHTML = o
                                }
                            }, 1e3)
                    }), $(".notice_flash_sale .close").on("click", function(t) {
                        $(".notice_flash_sale").hide()
                    })), $(".announcement-bar-wrapper").length && $(".announcement-bar-wrapper .close").on("click", function(t) {
                        $(".announcement-bar-wrapper").hide()
                    }), $("#cart-dropdown").length && ($(window).width() > 5024 ? $("#cart-mobile #cart-dropdown").length && $("#cart-mobile #cart-dropdown").appendTo(".item--cart") : $(".item--cart #cart-dropdown").length && $(".item--cart #cart-dropdown").appendTo("#cart-mobile .halo_mobileNavigation_wrapper")), $("#login-dropdown").length && ($(window).width() > 1024 ? $("#login-mobile #login-dropdown").length && $("#login-mobile #login-dropdown").appendTo(".navUser-item--account") : $(".navUser-item--account #login-dropdown").length && $(".navUser-item--account #login-dropdown").appendTo("#login-mobile .halo_mobileNavigation_wrapper")), t(), $(".search-form").length && ($(window).width() > 1024 ? $(".item--searchMobile .search-form").length && $(".item--searchMobile .search-form").appendTo(".item--quickSearch") : $(".item--quickSearch .search-form").length && $(".item--quickSearch .search-form").appendTo(".item--searchMobile")), $("#lang-switcher").length && ($(window).width() > 1024 ? $(".navUser-currency .lang_currency-dropdown").length || $(".currency-groups .lang_currency-dropdown").appendTo(".navUser-currency") : $(".navUser-currency .lang_currency-dropdown").length && $(".navUser-currency .lang_currency-dropdown").appendTo(".currency-groups")), $("#lang-switcher").length && ($(window).width() > 1024 ? $(".navUser-language .lang_currency-dropdown").length || $(".lang-groups .lang_currency-dropdown").appendTo(".navUser-language") : $(".navUser-language .lang_currency-dropdown").length && $(".navUser-language .lang_currency-dropdown").appendTo(".lang-groups")), $(".featuredProductCarousel").length && ($(".featuredProductCarousel").hasClass("slick-slider") || $(".featuredProductCarousel").slick({
                        infinite: !0,
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        dots: !0,
                        autoplay: !1,
                        arrows: !1
                    }), $(".site-nav > li").mouseover(function() {
                        $(".featuredProductCarousel").get(0).slick.setPosition()
                    }), $("ul.site-nav-mobile > li > .nav-action").on("click", function() {
                        $(".featuredProductCarousel").get(0).slick.setPosition()
                    })), e(),
                    function(t, e, a) {
                        if (a.length && a.is(":visible")) {
                            var i = e.html();
                            t.prev(a).html(i)
                        }
                    }($("#currencies"), $("#currencies [data-currency].active"), $("[data-currency-label]"))
            }
        }
    }(), theme.footer = function() {
        return {
            init: function() {
                $(window).width() <= 767 ? $(".footer-info").hasClass("footerMobile") || ($(".footer-info").addClass("footerMobile"), $(".footer-col--mobile .footer-info-list").css("display", "none")) : ($(".footer-info").removeClass("footerMobile"), $(".footer-col--mobile").removeClass("open-dropdown"), $(".footer-col--mobile .footer-info-list").css("display", "block"))
            }
        }
    }(), theme.sidebar = function() {
        function t() {
            $("[data-product-carousel-sidebar]").length && $("[data-product-carousel-sidebar]").each(function(t) {
                var e = $(this).find("[data-slick]");
                e.length && (e.hasClass("slick-slider") || e.slick())
            })
        }

        function e() {
            if (Shopify.queryParams = {}, location.search.length)
                for (var t, e = 0, a = location.search.substr(1).split("&"); e < a.length; e++)(t = a[e].split("=")).length > 1 && (Shopify.queryParams[decodeURIComponent(t[0])] = decodeURIComponent(t[1]))
        }

        function a(t) {
            var e = $.param(Shopify.queryParams).replace(/%2B/g, "+");
            return t ? "" != e ? t + "?" + e : t : location.pathname + "?" + e
        }

        function i(t) {
            delete Shopify.queryParams.page;
            var e = a(t);
            isSidebarAjaxClick = !0, History.pushState({
                param: Shopify.queryParams
            }, e, e)
        }

        function r(e) {
            $.ajax({
                type: "get",
                url: e,
                beforeSend: function() {
                    $(".loading-modal").show()
                },
                success: function(e) {
                    ! function(t) {
                        var e = $(".template-collection .page-container"),
                            a = e.find(".sidebar_content"),
                            i = e.find("#Collection"),
                            r = (e.find(".breadcrumb-wrapper"), $(t).find(".page-collections")),
                            o = r.find(".sidebar_content"),
                            n = (r.find(".breadcrumb-wrapper"), r.find("#Collection"));
                        if (a.replaceWith(o), i.replaceWith(n), checkNeedToConvertCurrency() && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format"), $(".shopify-product-reviews-badge").length && $(".spr-badge").length) window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges()
                    }(e), $(".sidebarBlock"), $(".sidebarBlock").each(function() {
                        var t = $(this);
                        t.find("input:checked").length && t.addClass("show_clear")
                    }), $(document).on("click", ".sidebarBlock.show_clear .clear", function(t) {
                        t.preventDefault(), t.stopPropagation();
                        var e = [],
                            a = $(this).parents(".sidebarBlock");
                        Shopify.queryParams.constraint && (e = Shopify.queryParams.constraint.split("+")), a.find("input:checked").each(function() {
                            var t = $(this).val();
                            if (t) {
                                var a = e.indexOf(t);
                                a >= 0 && e.splice(a, 1)
                            }
                        }), e.length ? Shopify.queryParams.constraint = e.join("+") : delete Shopify.queryParams.constraint, i()
                    }), o(), t()
                },
                error: function(t, e) {
                    alert($.parseJSON(t.responseText).description)
                },
                complete: function() {
                    $(".loading-modal").hide()
                }
            })
        }

        function o() {
            $(".sidebarBlock_filter .sidebarBlock-content .list-tags").each(function() {
                $(this).children("li").length > 0 ? $(this).parents(".sidebarBlock_filter").show() : $(this).parents(".sidebarBlock_filter").hide()
            })
        }
        return {
            init: function() {
                t(), $(".sidebar_mobile").on("click", function(t) {
                        t.preventDefault();
                        const e = $(t.target);
                        e.hasClass("is-open") ? (e.removeClass("is-open"), $(".page-sidebar").removeClass("is-open"), $("body").removeClass("open_Sidebar")) : (e.addClass("is-open"), $(".page-sidebar").addClass("is-open"), $("body").addClass("open_Sidebar"))
                    }), $(".sidebar_close .close").on("click", function(t) {
                        t.preventDefault(), $(".page-sidebar").removeClass("is-open"), $("body").removeClass("open_Sidebar")
                    }), $(".overlay_background").on("click", function(t) {
                        t.preventDefault(), $(".page-sidebar").hasClass("is-open") && ($(".page-sidebar").removeClass("is-open"), $("body").removeClass("open_Sidebar"))
                    }),
                    function() {
                        $(".all-categories-list").length && $(document).on("click", ".all-categories-list .navPages-action-wrapper", function(t) {
                            const e = $(t.target).parent();
                            e.siblings().removeClass("is-clicked"), e.toggleClass("is-clicked"), e.siblings().find("> .dropdown-category-list").slideUp("slow"), e.find("> .dropdown-category-list").slideToggle("slow")
                        });
                        var t = $(".breadcrumb-wrapper ul.breadcrumb .item.is-active").children("a").attr("href");
                        $(".all-categories-list .navPages-level-1").each(function() {
                            var e = $(this);
                            e.find(".navPages-action-wrapper a").attr("href") === t && e.children(".navPages-action-wrapper").trigger("click")
                        })
                    }(), e(), $(document).on("click", ".list-tags a, .list-tags label, .refined .selected-tag", function(t) {
                        t.preventDefault(), t.stopPropagation();
                        var e = [];
                        Shopify.queryParams.constraint && (e = Shopify.queryParams.constraint.split("+"));
                        var a = $(this).prev().val();
                        if (a) {
                            var r = e.indexOf(a);
                            r >= 0 ? e.splice(r, 1) : e.push(a)
                        }
                        e.length ? Shopify.queryParams.constraint = e.join("+") : delete Shopify.queryParams.constraint, i()
                    }), $('.filters-toolbar__item-child[data-select="SortBy"]').find("#SortBy").val(), $("#SortBy").on("change", function(t) {
                        var e = $("#SortBy").val(),
                            a = window.location.href.replace(window.location.search, "");
                        console.log(a), e.length ? Shopify.queryParams.sort_by = e : window.location.href = a, i()
                    }), o(), $(".template-collection").length && History.Adapter.bind(window, "statechange", function() {
                        History.getState(), e(), r(a())
                    })
            }
        }
    }(), theme.cart_dropdown = function() {
        var t = $("#cart-dropdown"),
            e = t.find(".products-list");

        function a() {
            var a = t.find(".no-items"),
                i = t.find(".has-items");
            e.children().length ? (i.show(), a.hide()) : (i.hide(), a.show())
        }

        function i(e) {
            t.find(".btn-remove").on("click", function(t) {
                t.preventDefault();
                var e = $(this).parents(".items").attr("id");
                e = e.match(/\d+/g), Shopify.removeItem(e, function(t) {
                    o(t)
                })
            })
        }

        function r() {
            Shopify.getCart(function(t) {
                o(t)
            })
        }

        function o(r) {
            if ($("[data-cart-count]").text(r.item_count), t.find(".summary .price").html(theme.Currency.formatMoney(r.total_price, theme.moneyFormat)), e.html(""), r.item_count > 0) {
                for (var o = 0; o < r.items.length; o++) {
                    var n = '<div class="items" id="cart-item-{ID}"><div class="product-on-cart"><a href="{URL}" title="{TITLE}" class="product-image"><img src="{IMAGE}" alt="{TITLE}"></a><div class="product-details"><a href="javascript:void(0)" class="btn-remove"><span>&#215;</span></a><a class="product-name" href="{URL}">{TITLE}</a><div class="option"><span>{VARIANT}</span></div><div class="cart-collateral"><span class="qtt">{QUANTITY} X </span><span class="price money">{PRICE}</span></div></div></div></div>';
                    n = (n = (n = (n = (n = (n = (n = n.replace(/\{ID\}/g, r.items[o].id)).replace(/\{URL\}/g, r.items[o].url)).replace(/\{TITLE\}/g, r.items[o].product_title)).replace(/\{VARIANT\}/g, r.items[o].variant_title || "")).replace(/\{QUANTITY\}/g, r.items[o].quantity)).replace(/\{IMAGE\}/g, Shopify.resizeImage(r.items[o].image, "160x"))).replace(/\{PRICE\}/g, theme.Currency.formatMoney(r.items[o].price, theme.moneyFormat)), e.append(n)
                }
                i(), (window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency) && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
            }
            a()
        }
        return {
            init: function() {
                $("[data-cart-preview-pc]").on("click", function(t) {
                    t.preventDefault(), r();
                    const e = $(t.currentTarget);
                    e.hasClass("is-open") ? (e.removeClass("is-open"), $("#cart-dropdown").slideUp()) : (e.addClass("is-open"), $("#cart-dropdown").slideDown())
                }), $("[data-cart-preview]").on("click", function(t) {
                    t.preventDefault(), r()
                }), $(document).on("click", function(t) {
                    $("[data-cart-preview-pc]").hasClass("is-open") && 0 === $(t.target).closest("[data-cart-preview-pc]").length && 0 === $(t.target).closest("#cart-dropdown").length && ($("[data-cart-preview-pc]").removeClass("is-open"), $("#cart-dropdown").slideUp())
                }), a(), i()
            }
        }
    }(), theme.wishlist = function() {
        var t = localStorage.getItem("items") ? JSON.parse(localStorage.getItem("items")) : [];

        function e(t) {
            var e = $("[data-wishlist-container]");
            jQuery.getJSON(window.router + "/products/" + t + ".js", function(t) {
                var a = "",
                    i = theme.Currency.formatMoney(t.price_min, theme.moneyFormat);
                a += '<tr class="wishlist_row" data-wishlist-added="wishlist-' + t.id + '" data-product-id="product-' + t.handle + '">', a += '<th class="wishlist_col wishlist_image text-center">', a += '<a href="' + t.url + '" class="product-grid-image" data-collections-related="/collections/all?view=related">', a += '<img src="' + t.featured_image + '" alt="' + t.featured_image.alt + '">', a += "</a></th>", a += '<th class="wishlist_col wishlist_name text-left">', a += '<div class="product-vendor">', a += '<a href="' + window.router + "/collections/vendors?q=" + t.vendor + '" title="' + t.vendor + '">' + t.vendor + "</a></div>", a += '<a class="product-title" href="' + t.url + '" title="' + t.title + '">' + t.title + "</a></th>", a += '<th class="wishlist_col wishlist_price text-center"><div class="product-price"><span class="price-item">' + i + "</span></div></th>", a += '<th class="wishlist_col wishlist_remove text-center"><a class="btn btn--secondary product-remove whislist-added" href="#" data-product-handle="' + t.handle + '" data-icon-wishlist data-id="' + t.id + '"><span class="icon icon--big">&#215;</span>' + theme.strings.remove + "</a></th>", a += '<th class="wishlist_col wishlist_add text-center">', a += '<form action="/cart/add" method="post" class="variants" id="wishlist-product-form-' + t.id + '" data-id="product-actions-' + t.id + '" enctype="multipart/form-data">', t.available ? (1 == t.variants.length && (a += '<button class="btn btn--secondary-accent" type="submit" data-btn-addToCart data-form-id="#wishlist-product-form-' + t.id + '">' + theme.strings.addToCart + '</button><input type="hidden" name="id" value="' + t.variants[0].id + '" />'), t.variants.length > 1 && (a += '<a class="btn btn--secondary-accent" title="' + t.title + '" href="' + t.url + '">' + theme.strings.select_options + "</a>")) : a += '<button class="btn product-btn product-btn-soldOut" type="submit" disabled>' + theme.strings.unavailable + "</button>", a += "</form></th>", a += "</tr>", e.append(a);
                var r = $(".wrapper-wishlist a.share").attr("href");
                r += encodeURIComponent(t.title + "\nPrice: " + i.replace(/(<([^>]+)>)/gi, "") + "\nLink: " + window.location.protocol + "//" + window.location.hostname + t.url + "\n\n"), $(".wrapper-wishlist a.share").attr("href", r), (window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency) && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
            })
        }

        function a() {
            var t = JSON.parse(localStorage.getItem("items")),
                e = $("#wishlist_pagination"),
                a = '<li><a href="#" class="btn btn--narrow btn--prev disabled"><span class="icon_text">' + theme.strings.previous + "</span></a></li>",
                i = $("[data-wishlist-container]");
            e.children().remove();
            var r = Math.ceil(t.length / 5);
            if (r <= 1) i.children().show();
            else {
                for (var o = 0; o < r; o++) {
                    var n = o + 1;
                    a += 0 === o ? '<li><a class="pagination-link pagination--current" data-page="' + n + '" href="' + n + '" title="' + n + '">' + n + "</a></li>" : '<li><a class="pagination-link" data-page="' + n + '" href="' + n + '" title="' + n + '">' + n + "</a></li>"
                }
                a += '<li><a class="btn btn--narrow btn--next" href="#"><span class="icon_text">' + theme.strings.next + "</span></a></li>", e.append(a), i.children().each(function(t, e) {
                    t >= 0 && t < 5 ? $(e).show() : $(e).hide()
                }), e.off("click.wl-pagging").on("click.wl-pagging", "li a", function(t) {
                    t.preventDefault();
                    var a = $(this).hasClass("btn--prev"),
                        o = $(this).hasClass("btn--next"),
                        n = $(this).data("page");
                    if (a) {
                        var s = parseInt($("#wishlist_pagination").find(".pagination--current").data("page"));
                        n = s - 1
                    }
                    if (o) {
                        s = parseInt($("#wishlist_pagination").find(".pagination--current").data("page"));
                        n = s + 1
                    }
                    i.children().each(function(t, e) {
                        t >= 5 * (n - 1) && t < 5 * n ? $(e).show() : $(e).hide()
                    }), 1 === n ? (e.find(".btn--prev").addClass("disabled"), e.find(".btn--next").removeClass("disabled")) : n === r ? (e.find(".btn--next").addClass("disabled"), e.find(".btn--prev").removeClass("disabled")) : (e.find(".btn--prev").removeClass("disabled"), e.find(".btn--next").removeClass("disabled")), $("#wishlist_pagination").find(".pagination-link").removeClass("pagination--current"), $("#wishlist_pagination").find('[data-page="' + n + '"]').addClass("pagination--current")
                })
            }
        }

        function i() {
            $(document).off("click.addOrRemoveWishlist", "[data-icon-wishlist]").on("click.addOrRemoveWishlist", "[data-icon-wishlist]", function(i) {
                i.preventDefault();
                var r = $(this),
                    o = r.data("id"),
                    n = r.data("product-handle"),
                    s = t.indexOf(n);
                r.hasClass("whislist-added") ? (r.removeClass("whislist-added"), $('[data-wishlist-added="wishlist-' + o + '"]').length && $('[data-wishlist-added="wishlist-' + o + '"]').remove(), t.splice(s, 1), localStorage.setItem("items", JSON.stringify(t)), $("[data-wishlist-container]").length && a()) : (r.addClass("whislist-added"), $("[data-wishlist-container]").length && e(n), t.push(n), localStorage.setItem("items", JSON.stringify(t))),
                    function(e) {
                        var a = $('[data-product-handle="' + e + '"]');
                        t.indexOf(e) >= 0 ? a.addClass("whislist-added") : a.removeClass("whislist-added")
                    }(n)
            })
        }
        return localStorage.setItem("items", JSON.stringify(t)), t.length && (t = JSON.parse(localStorage.getItem("items"))), theme.product_card.init(), {
            init: function() {
                ! function() {
                    var t = localStorage.getItem("items") ? JSON.parse(localStorage.getItem("items")) : [];
                    if (t.length)
                        for (var e = 0; e < t.length; e++) $('[data-product-handle="' + t[e] + '"]').addClass("whislist-added")
                }(),
                function() {
                    if ("undefined" != typeof Storage && $(".page").hasClass("page-wishlist")) {
                        var t = JSON.parse(localStorage.getItem("items"));
                        if (t.length <= 0) return;
                        t.forEach(function(t) {
                            e(t)
                        }), setTimeout(function() {
                            a()
                        }, 1e3)
                    }
                }(), i()
            }
        }
    }(), theme.compare = function() {
        var t = localStorage.getItem("compareArr") ? JSON.parse(localStorage.getItem("compareArr")) : [];

        function e(t) {
            var e = $("[data-compare-modal]").find(".product-grid"),
                a = $("[data-compare-modal]").find(".rating"),
                i = $("[data-compare-modal]").find(".description"),
                r = $("[data-compare-modal]").find(".collection"),
                o = $("[data-compare-modal]").find(".availability"),
                n = $("[data-compare-modal]").find(".product-type"),
                s = $("[data-compare-modal]").find(".product-sku");
            jQuery.getJSON(window.router + "/products/" + t + ".js", function(t) {
                var c = "",
                    l = "",
                    d = "",
                    p = "",
                    u = "",
                    h = "",
                    m = "",
                    f = "",
                    v = "",
                    g = (theme.Currency.formatMoney(t.price_min, theme.moneyFormat), t.id),
                    b = "";
                $(".halo-column-product .halo-item").each(function() {
                    $(this).find(".product-card").data("id") == g && (price = $(this).find(".product-price").html(), productLabel = $(this).find(".product_badges").html(), rating = $(this).find(".spr-badge").html(), coll = $(this).find(".collection-product").html(), desc = $(this).find(".product-description").html(), sku = $(this).find(".sku-product").html(), $(this).find(".product-price").hasClass("price--on-sale") && (b = "price--on-sale"), l += price, null != productLabel && "" != productLabel && (d += productLabel), "" == rating || null == rating ? p += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '"></div>' : p += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">' + rating + "</div>", a.append(p), "" == coll || null == desc ? h += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">-</div>' : h += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">' + coll + "</div>", r.append(h), "" == desc || null == desc ? u += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">-</div>' : u += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">' + desc + "</div>", i.append(u), "" == sku || null == desc ? v += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">-</div>' : v += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">' + sku + "</div>", s.append(v))
                }), c += '<div class="grid-item col-xl-4" data-compare-added="compare-' + t.id + '">', c += '<div class="product-card" data-product-id="product-' + t.handle + '">', c += '<div class="product-image">', c += '<a href="' + t.url + '" class="product-link">', c += '<img src="' + t.featured_image + '" alt="' + t.featured_image.alt + '">', c += "</a>", c += '<div class="product_badges">' + d + "</div></div>", c += '<div class="product-content">', c += '<div class="product-vendor">', c += '<a href="' + window.router + "/collections/vendors?q=" + t.vendor + '" title="' + t.vendor + '">' + t.vendor + "</a></div>", c += '<h4 class="product-title"><a href="' + t.url + '" title="' + t.title + '">' + t.title + "</a></h4>", c += '<div class="product-price ' + b + '">' + l + "</div>", c += '<div class="product-action">', c += '<form action="/cart/add" method="post" class="variants" data-id="product-actions-' + t.id + '" enctype="multipart/form-data">', t.available ? (1 == t.variants.length && (c += '<button data-btn-addToCart class="btn product-btn" type="submit">' + theme.strings.addToCart + '</button><input type="hidden" name="id" value="' + t.variants[0].id + '" />'), t.variants.length > 1 && (c += '<a class="btn product-btn" title="' + t.title + '" href="' + t.url + '">' + theme.strings.select_options + "</a>"), m += '<div class="col-xl-4 in-stock" data-compare-added="compare-' + t.id + '">' + theme.strings.in_stock + "</div>") : (c += '<button data-btn-addToCart class="btn product-btn product-btn-soldOut" type="submit" disabled="disabled">' + theme.strings.unavailable + "</button>", m += '<div class="col-xl-4 unavailable" data-compare-added="compare-' + t.id + '">' + theme.strings.out_of_stock + "</div>"), c += '</form><div class="text-center mt-3"><a class="product-remove" href="javascript:void(0);" data-icon-compare-added data-compare-product-handle="' + t.handle + '" data-id="' + t.id + '">' + theme.strings.remove + "</a></div>", c += "</div></div></div></div>", e.append(c), f += '<div class="col-xl-4" data-compare-added="compare-' + t.id + '">' + t.type + "</div>", o.append(m), n.append(f), (window.show_multiple_currencies && Currency.currentCurrency != shopCurrency || window.show_auto_currency) && Currency.convertAll(window.shop_currency, $("#currencies .active").attr("data-currency"), "span.money", "money_format")
            })
        }

        function a() {
            compareCountNum = $("[data-compare-count]"), compareElm = $("[data-icon-compare]"), $("[data-compare-added]").remove(), t.splice(0, t.length), localStorage.setItem("compareArr", JSON.stringify(t)), compareElm.hasClass("compare-added") && compareElm.removeClass("compare-added"), totalProduct = Math.ceil(t.length), compareCountNum.text("0"), compareCountNum.parent().removeClass("show")
        }

        function i(e) {
            var a = $('[data-compare-product-handle="' + e + '"]'),
                i = t.indexOf(e),
                r = $("[data-compare-count]");
            compareItems = localStorage.getItem("compareArr") ? JSON.parse(localStorage.getItem("compareArr")) : [], totalProduct = Math.ceil(compareItems.length), i >= 0 ? (a.addClass("compare-added"), a.find(".compare-text").text("remove compare")) : (a.removeClass("compare-added"), a.find(".compare-text").text("add compare")), r.text(totalProduct), totalProduct > 1 ? r.parent().addClass("show") : r.parent().removeClass("show")
        }

        function r() {
            if ($(".page-collections").length) {
                $("[data-compare-modal]").find(".product-grid"), $("[data-compare-message-modal]");
                $(document).off("click.compareSelected", "[data-compare-selected]").on("click.compareSelected", "[data-compare-selected]", function(e) {
                    e.preventDefault(), e.stopPropagation(), "undefined" != typeof Storage ? t.length <= 1 || (t.forEach(function(e) {
                        $(document).off("click.removeCompareItem", "[data-icon-compare-added]").on("click.removeCompareItem", "[data-icon-compare-added]", function(e) {
                            e.preventDefault(), e.stopPropagation();
                            var a = $(this),
                                r = a.data("id"),
                                o = a.data("compare-product-handle"),
                                n = t.indexOf(o);
                            $('[data-compare-added="compare-' + r + '"]').length && $('[data-compare-added="compare-' + r + '"]').remove(), t.splice(n, 1), localStorage.setItem("compareArr", JSON.stringify(t)), i(o)
                        })
                    }), compareCountNum = $("[data-compare-count]"), compareElm = $("[data-icon-compare]"), $(document).off("click.removeAllCompareItem", "[data-compare-remove-all]").on("click.removeAllCompareItem", "[data-compare-remove-all]", function(e) {
                        e.preventDefault(), e.stopPropagation(), $("[data-compare-added]").remove(), t.splice(0, t.length), localStorage.setItem("compareArr", JSON.stringify(t)), compareElm.hasClass("compare-added") && compareElm.removeClass("compare-added"), totalProduct = Math.ceil(t.length), compareCountNum.text("0"), compareCountNum.parent().removeClass("show"), $("#compare").modal("hide")
                    })) : alert("Sorry! No web storage support..")
                })
            }
        }
        return localStorage.setItem("compareArr", JSON.stringify(t)), t.length && (t = JSON.parse(localStorage.getItem("compareArr"))), {
            init: function() {
                $(".page-collections").length && $(document).on("click", "[data-icon-compare]", function(a) {
                        a.preventDefault();
                        var r = $(this),
                            o = r.data("id"),
                            n = r.data("compare-product-handle"),
                            s = t.indexOf(n);
                        r.hasClass("compare-added") ? (r.removeClass("compare-added"), $('[data-compare-added="compare-' + o + '"]').length && $('[data-compare-added="compare-' + o + '"]').remove(), t.splice(s, 1), localStorage.setItem("compareArr", JSON.stringify(t))) : (r.addClass("compare-added"), t.push(n), localStorage.setItem("compareArr", JSON.stringify(t)), e(n)), i(n)
                    }),
                    function() {
                        if ($(".page-collections").length) {
                            var r = $("[data-compare-count]");
                            if (totalProduct = Math.ceil(t.length), r.text(totalProduct), t.length) {
                                for (var o = 0; o < t.length; o++) $('[data-compare-product-handle="' + t[o] + '"]').addClass("compare-added");
                                if ("undefined" != typeof Storage) {
                                    if (t.length <= 0) return;
                                    a(), setTimeout(function() {
                                        t.forEach(function(t) {
                                            e(t), i(t)
                                        })
                                    }, 700)
                                } else alert("Sorry! No web storage support..")
                            }
                        }
                    }(), r()
            }
        }
    }(), theme.cart_page = function() {
        $(".page-cart").length && ($("[data-qtt]"), $(document).on("click", "[data-qtt]", function(t) {
            t.preventDefault(), t.stopPropagation();
            var e = $(this),
                a = e.siblings('input[name="quantity"]').length > 0 ? e.siblings('input[name="quantity"]') : e.siblings('input[name="group_quantity"]');
            a.length < 1 && (a = e.siblings('input[name="updates[]"]'));
            var i = parseInt(a.val());
            switch (!0) {
                case e.hasClass("plus"):
                    i += 1;
                    break;
                case e.hasClass("minus") && i > 0:
                    i -= 1
            }
            a.val(i)
        }))
    }(), theme.someone_purchased = function() {
        function t() {
            $(".product-notification .time-text span:visible").text();
            if ($(".product-notification").hasClass("active")) $(".product-notification").removeClass("active");
            else {
                var t = $(".data-product").length,
                    e = Math.floor(Math.random() * t),
                    a = $(".product-notification .data-product:eq(" + e + ")").data("image"),
                    i = $(".product-notification .data-product:eq(" + e + ")").data("title"),
                    r = $(".product-notification .data-product:eq(" + e + ")").data("url"),
                    o = $(".product-notification .data-product:eq(" + e + ")").data("local");
                $(".product-notification").addClass("active"), $(".product-notification .product-image").find("img").attr("src", a), $(".product-notification .product-name").attr("href", r), $(".product-notification .product-name").text(i), $(".product-notification .product-image").attr("href", r), $(".product-notification .time-text").text(o)
            }
        }
        return {
            init: function() {
                ! function() {
                    var t = $("#accept-cookies");
                    "closed" == $.cookie("cookieMessage") ? t.remove() : t.removeClass("hide"), t.find("[data-accept-cookie]").on("click", function(e) {
                        e.preventDefault(), t.remove(), $.cookie("cookieMessage", "closed", {
                            expires: 1,
                            path: "/"
                        })
                    })
                }(),
                function() {
                    if ($(".product-notification").length) {
                        "closed" == $.cookie("pr_notification") && $(".product-notification").remove(), $(".close-notifi").bind("click", function() {
                            $(".product-notification").remove(), $.cookie("pr_notification", "closed", {
                                expires: 1,
                                path: "/"
                            })
                        });
                        var e = $(".product-notification").data("time");
                        setInterval(t, e)
                    }
                }()
            }
        }
    }(), theme.MultiCategory = function() {
        var t = !0;

        function e(t, e) {
            for (var a = t; a <= 4; a++) $("#themevale_select-level-" + a + " ul li[data-value]").remove();
            for (a = 0; a < e.length; a++) $("#themevale_select-level-" + t + " ul").append("<li data-value='" + a + "' onclick='theme.MultiCategory.changeOption(" + t + "," + a + ")'>" + e[a].title.trim() + "</li>")
        }

        function a(a, o) {
            if (null != o) {
                var n = !1;
                0 == $("#themevale_select-level-" + a + ' ul li[data-value="' + o + '"]').hasClass("active") && (n = !0), $("#themevale_select-level-" + a + " ul").children().removeClass("active"), $("#themevale_select-level-" + a + " ul").children().each(function() {
                    $(this).attr("data-value") == o && ($(this).addClass("active"), $("#themevale_select-level-" + a).prev(".da-force-up.form-select").text($(this).text()))
                }), i(a);
                for (var s = r, c = 1; c <= a; c++) {
                    var l = parseInt($("#themevale_select-level-" + c + " ul").find(".active").attr("data-value"));
                    null != s[l] && (s = s[l].children)
                }
                3 == a && 1 == n && $("#themevale_select-browse").trigger("click"), e(a = parseInt(a) + 1, s), s.length && 0 == t && ($(".themevale_multilevel-category-filter").find(".loading").show(), setTimeout(function() {
                    $("#themevale_select-level-" + a).addClass("open"), $(".themevale_multilevel-category-filter").find(".loading").hide()
                }, 300))
            }
        }

        function i(t) {
            for (var e = t + 1; e <= 3; e++) {
                var a = $("#themevale_select-level-" + e + " ul li:eq(0)").html();
                $("#themevale_select-level-" + e).prev(".da-force-up.form-select").html(a), $("#themevale_select-level-" + e + " ul").html('<li onclick="theme.MultiCategory.changeOptionAll(' + e + ')">' + a + "</li>")
            }
        }
        var r = function t(e) {
            var a = new Array;
            return e.find(" > li").each(function() {
                var e = jQuery(this).find(">a"),
                    i = {
                        link: e.attr("href"),
                        title: e.html(),
                        children: t(jQuery(this).find("> ul "))
                    };
                a.push(i)
            }), a
        }(jQuery("nav#navPages >  ul"));
        jQuery("#themevale_select-level-1 ul"), jQuery("#themevale_select-level-2 ul"), jQuery("#themevale_select-level-3 ul");
        return {
            init: function() {
                ! function() {
                    if ($(".themevale_MultiCategory").length) {
                        e(1, r);
                        var o = 1;
                        if ($("body").hasClass("template-index") && jQuery.cookie("multiLevelCategory", ""), "" != jQuery.cookie("multiLevelCategory")) {
                            for (var n = jQuery.cookie("multiLevelCategory").split(","), s = 0; s < n.length; s++) a(o, n[s]), o++;
                            $(".themevale_multilevel-category-filter").find(".loading").hide(), $(".dropdown-up").removeClass("open")
                        }
                        $(document).on("click", ".da-force-up", function(t) {
                            $(this).parent().find(".dropdown-up").hasClass("open") ? $(this).parent().find(".dropdown-up").removeClass("open") : ($(".dropdown-up").removeClass("open"), $(this).parent().find(".dropdown-up").addClass("open"))
                        }), $(window).click(function(t) {
                            var e = $(".da-force-up");
                            e.is(t.target) || 0 !== e.has(t.target).length || e.next(".dropdown-up").removeClass("open")
                        }), $("#themevale_select-browse").click(function() {
                            for (var t = r, e = 0, a = "", i = [], o = 1; o <= 3; o++) e = parseInt($("#themevale_select-level-" + o + " ul").find(".active").attr("data-value")), isNaN(e) || (i.push(e), a = t[e].link, t[e].children.length && (t = t[e].children));
                            jQuery.cookie("multiLevelCategory", i, {
                                expires: 1,
                                path: "/"
                            }), location.href = a
                        }), $("#themevale_clear-select").click(function() {
                            i(1);
                            var t = $("#themevale_select-level-1 ul li:eq(0)").html();
                            $("#themevale_select-level-1").prev(".da-force-up.form-select").html(t), $("#themevale_select-level-1 ul").children().removeClass("active")
                        }), t = !1
                    }
                }()
            },
            changeOption: function(t, e) {
                a(t, e)
            },
            changeOptionAll: function(t) {
                ! function(t) {
                    $("#themevale_select-level-" + t + " ul").children().removeClass("active");
                    var e = $("#themevale_select-level-" + t + " ul li:eq(0)").html();
                    $("#themevale_select-level-" + t).prev(".da-force-up.form-select").html(e)
                }(t)
            }
        }
    }(), theme.halo_mobile = function() {
        function t() {
            $("#site-nav-mobile").find(".is-open").removeClass("is-open"), $("#site-nav-mobile").find(".is-hidden").removeClass("is-hidden")
        }
        return {
            init: function() {
                $('[data-mobile-menu-toggle="menu"]').on("click", function() {
                        if ($(this).toggleClass("is-open"), $("body").toggleClass("open_menu"), $(window).width() > 1024) {
                            var t = $(".site-header").position(),
                                e = $(".site-header").outerHeight();
                            $("#site-nav-mobile").css({
                                top: t.top + e,
                                height: $(window).height() - t.top - e
                            })
                        } else $("#site-nav-mobile").css("top", 0)
                    }), $("#site-nav-mobile .close_menu").on("click", function(e) {
                        $('[data-mobile-menu-toggle="menu"]').removeClass("is-open"), $("body").removeClass("open_menu"), t()
                    }), $(".overlay_background").on("click", function(e) {
                        $("body").hasClass("open_menu") && ($('[data-mobile-menu-toggle="menu"]').removeClass("is-open"), $("body").removeClass("open_menu"), t())
                    }), $("[data-cart-preview]").on("click", function(t) {
                        $("body").addClass("open_Cart")
                    }), $("[data-close-cart-preview]").on("click", function(t) {
                        $("body").removeClass("open_Cart")
                    }), $(document).on("click", function(t) {
                        $("body").hasClass("open_Cart") && 0 === $(t.target).closest("[data-cart-preview]").length && 0 === $(t.target).closest("#cart-mobile").length && $("body").removeClass("open_Cart")
                    }), $("[data-login-dropdown-pc]").on("click", function(t) {
                        t.preventDefault();
                        const e = $(t.currentTarget);
                        e.hasClass("is-open") ? (e.removeClass("is-open"), $("#login-dropdown").slideUp()) : (e.addClass("is-open"), $("#login-dropdown").slideDown())
                    }), $("[data-close-login-dropdown-pc]").on("click", function(t) {
                        t.preventDefault(), $("[data-login-dropdown-pc]").removeClass("is-open"), $("#login-dropdown").slideUp()
                    }), $(document).on("click", function(t) {
                        $("[data-login-dropdown-pc]").hasClass("is-open") && 0 === $(t.target).closest("[data-login-dropdown-pc]").length && 0 === $(t.target).closest("#login-dropdown").length && ($("[data-login-dropdown-pc]").removeClass("is-open"), $("#login-dropdown").slideUp())
                    }), $("[data-login-toggle]").on("click", function(t) {
                        $("body").addClass("open_Account")
                    }), $("[data-close-login-dropdown]").on("click", function(t) {
                        $("body").removeClass("open_Account")
                    }), $(".overlay_background").on("click", function(t) {
                        t.preventDefault(), $("body").hasClass("open_Account") && $("body").removeClass("open_Account")
                    }), $(".item--searchMobile .navUser-action").on("click", function(t) {
                        $(".item--searchMobile .navUser-action").toggleClass("is-open")
                    }), $(".footerMobile .footer-col--mobile .footer-info-heading").on("click", function() {
                        $(this).parent().toggleClass("open-dropdown"), $(this).parent().find(".footer-info-list").slideToggle()
                    }),
                    function() {
                        if ($(".terms_conditions_wrapper").length) {
                            var t = $('.terms_conditions_wrapper input[type="checkbox"]');
                            1 == t.checked ? t.parent().next().removeClass("disabled") : t.parent().next().addClass("disabled"), $(document).on("click", ".terms_conditions_wrapper .title", function(t) {
                                t.preventDefault();
                                var e = $(this),
                                    a = e.prev();
                                a.prop("checked") ? (a.prop("checked", !1), e.parent().next().addClass("disabled")) : (a.prop("checked", !0), e.parent().next().removeClass("disabled"))
                            })
                        }
                    }(), $(document).on("click", ".site-nav-mobile .nav-action", function(t) {
                        const e = $(t.target).parent(),
                            a = e.siblings(),
                            i = e.closest(".site-nav-dropdown"),
                            r = i.siblings();
                        $(t.target).hasClass("menu__moblie_end") || $(t.target).hasClass("link") || (e.addClass("is-open"), e.hasClass("is-open") && a.addClass("is-hidden"), i.length && r.addClass("is-hidden"))
                    }), $(document).on("click", ".site-nav-mobile .menu-mb-title", function(t) {
                        const e = $(t.target).closest(".dropdown");
                        console.log(e);
                        const a = e.siblings(),
                            i = $(t.target).closest(".site-nav-dropdown").siblings();
                        e.removeClass("is-open"), a.removeClass("is-hidden"), i.removeClass("is-hidden")
                    })
            }
        }
    }(), $(document).ready(function() {
        var t = new theme.Sections;
        t.register("cart-template", theme.Cart), t.register("product", theme.Product), t.register("collection-template", theme.Filters), t.register("product-template", theme.Product), t.register("map", theme.Maps), t.register("video-section", theme.VideoSection), t.register("product-recommendations", theme.ProductRecommendations), t.register("slideshow-section", theme.SlideshowSection), t.register("cart-page", theme.cart_page), theme.header.init(), theme.footer.init(), theme.sidebar.init(), theme.wishlist.init(), theme.compare.init(), theme.collection.init(), theme.cart_dropdown.init(), theme.halo_mobile.init(), theme.product_card.init(), theme.product_sticky_atc.init(), theme.someone_purchased.init(), theme.products_frequently_by_together.init(), theme.product_quickview.init(), theme.MultiCategory.init(), theme.homepage_section.init(), $(window).resize(function() {
            theme.header.init(), theme.footer.init(), theme.product_card.init(), theme.homepage_section.init()
        })
    }), theme.init = function() {
        theme.customerTemplates.init();
        slate.rte.wrapTable({
            $tables: $(".rte table,.custom__item-inner--html table"),
            tableWrapperClass: "scrollable-wrapper"
        });
        slate.rte.wrapIframe({
            $iframes: $('.rte iframe[src*="youtube.com/embed"],.rte iframe[src*="player.vimeo"],.custom__item-inner--html iframe[src*="youtube.com/embed"],.custom__item-inner--html iframe[src*="player.vimeo"]'),
            iframeWrapperClass: "video-wrapper"
        }), slate.a11y.pageLinkFocus($(window.location.hash)), $(".in-page-link").on("click", function(t) {
            slate.a11y.pageLinkFocus($(t.currentTarget.hash))
        }), $('a[href="#"]').on("click", function(t) {
            t.preventDefault()
        }), slate.a11y.accessibleLinks({
            messages: {
                newWindow: theme.strings.newWindow,
                external: theme.strings.external,
                newWindowExternal: theme.strings.newWindowExternal
            },
            $links: $("a[href]:not([aria-describedby], .product-single__thumbnail)")
        }), theme.FormStatus.init();
        var t = {
                image: "[data-image]",
                imagePlaceholder: "[data-image-placeholder]",
                imageWithPlaceholderWrapper: "[data-image-with-placeholder-wrapper]"
            },
            e = {
                hidden: "hide"
            };
        $(document).on("lazyloaded", function(a) {
            var i = $(a.target);
            i.is(t.image) && i.closest(t.imageWithPlaceholderWrapper).find(t.imagePlaceholder).addClass(e.hidden)
        }), $(t.image + ".lazyloaded").closest(t.imageWithPlaceholderWrapper).find(t.imagePlaceholder).addClass(e.hidden)
    }, $(theme.init);